name: publish-drivers

on:
  push:
    branches:
      - main
      - beta
    paths:
      - "drivers/**.yaml"
      - "drivers/**.yml"
      - "drivers/**.lua"
  pull_request:
    branches:
      - main
      - beta
    paths:
      - "drivers/**.yaml"
      - "drivers/**.yml"
      - "drivers/**.lua"

jobs:
  # Job to run change detection
  parse-changes:
    name: "Parse Push/Pull Changes"
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set matched filters as job 'drivers' output variable
    outputs:
      drivers: ${{ steps.filter.outputs.changes }}
    steps:
      - name: "Fetching Repository Contents"
        uses: actions/checkout@v3
        id: checkout
      - name: "Filter Paths"
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.base_ref || github.ref_name }}
          filters: |
            zwave-switch: 'drivers/**/zwave-switch/**'
            zwave-fan: 'drivers/**/zwave-fan/**'

  matrix-prep:
    if: needs.parse-changes.outputs.drivers != '[]'
    name: "Read/Parse Strategy Matrix"
    needs: parse-changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: "Fetching Repository Contents"
        uses: actions/checkout@v3
        id: checkout
      - name: "Parse inputFile"
        uses: JoshuaTheMiller/conditional-build-matrix@main
        id: set-matrix
        with:
          filter: 'drivers[?contains(`${{ needs.parse-changes.outputs.drivers }}`, driver)]'

  publish-drivers:
    if: needs.matrix-prep.outputs.matrix != '[]'
    name: "Publish Driver(s)"
    needs: matrix-prep
    strategy:
      matrix: ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
    uses: ./.github/workflows/publish-smartthings-driver.yml
    with:
      driver: ${{ matrix.driver }}
      path: ${{ matrix.path }}
      label: ${{ matrix.label }}
      pkgkey: ${{ matrix.pkgkey }}
      environment: ${{ github.base_ref || github.ref_name }}
    secrets: inherit
