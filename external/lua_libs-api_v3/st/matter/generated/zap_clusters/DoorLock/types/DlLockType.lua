-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.DoorLock.types.DlLockType: st.matter.data_types.Uint8
--- @alias DlLockType
---
--- @field public byte_length number 1
--- @field public DEAD_BOLT number 0
--- @field public MAGNETIC number 1
--- @field public OTHER number 2
--- @field public MORTISE number 3
--- @field public RIM number 4
--- @field public LATCH_BOLT number 5
--- @field public CYLINDRICAL_LOCK number 6
--- @field public TUBULAR_LOCK number 7
--- @field public INTERCONNECTED_LOCK number 8
--- @field public DEAD_LATCH number 9
--- @field public DOOR_FURNITURE number 10

local DlLockType = {}
local new_mt = UintABC.new_mt({NAME = "DlLockType", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.DEAD_BOLT] = "DEAD_BOLT",
    [self.MAGNETIC] = "MAGNETIC",
    [self.OTHER] = "OTHER",
    [self.MORTISE] = "MORTISE",
    [self.RIM] = "RIM",
    [self.LATCH_BOLT] = "LATCH_BOLT",
    [self.CYLINDRICAL_LOCK] = "CYLINDRICAL_LOCK",
    [self.TUBULAR_LOCK] = "TUBULAR_LOCK",
    [self.INTERCONNECTED_LOCK] = "INTERCONNECTED_LOCK",
    [self.DEAD_LATCH] = "DEAD_LATCH",
    [self.DOOR_FURNITURE] = "DOOR_FURNITURE",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.DEAD_BOLT  = 0x00
new_mt.__index.MAGNETIC  = 0x01
new_mt.__index.OTHER  = 0x02
new_mt.__index.MORTISE  = 0x03
new_mt.__index.RIM  = 0x04
new_mt.__index.LATCH_BOLT  = 0x05
new_mt.__index.CYLINDRICAL_LOCK  = 0x06
new_mt.__index.TUBULAR_LOCK  = 0x07
new_mt.__index.INTERCONNECTED_LOCK  = 0x08
new_mt.__index.DEAD_LATCH  = 0x09
new_mt.__index.DOOR_FURNITURE  = 0x0A

DlLockType.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(DlLockType, new_mt)

return DlLockType

