-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.DoorLock.types.DlOperationSource: st.matter.data_types.Uint8
--- @alias DlOperationSource
---
--- @field public byte_length number 1
--- @field public UNSPECIFIED number 0
--- @field public MANUAL number 1
--- @field public PROPRIETARY_REMOTE number 2
--- @field public KEYPAD number 3
--- @field public AUTO number 4
--- @field public BUTTON number 5
--- @field public SCHEDULE number 6
--- @field public REMOTE number 7
--- @field public RFID number 8
--- @field public BIOMETRIC number 9

local DlOperationSource = {}
local new_mt = UintABC.new_mt({NAME = "DlOperationSource", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.UNSPECIFIED] = "UNSPECIFIED",
    [self.MANUAL] = "MANUAL",
    [self.PROPRIETARY_REMOTE] = "PROPRIETARY_REMOTE",
    [self.KEYPAD] = "KEYPAD",
    [self.AUTO] = "AUTO",
    [self.BUTTON] = "BUTTON",
    [self.SCHEDULE] = "SCHEDULE",
    [self.REMOTE] = "REMOTE",
    [self.RFID] = "RFID",
    [self.BIOMETRIC] = "BIOMETRIC",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.UNSPECIFIED  = 0x00
new_mt.__index.MANUAL  = 0x01
new_mt.__index.PROPRIETARY_REMOTE  = 0x02
new_mt.__index.KEYPAD  = 0x03
new_mt.__index.AUTO  = 0x04
new_mt.__index.BUTTON  = 0x05
new_mt.__index.SCHEDULE  = 0x06
new_mt.__index.REMOTE  = 0x07
new_mt.__index.RFID  = 0x08
new_mt.__index.BIOMETRIC  = 0x09

DlOperationSource.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(DlOperationSource, new_mt)

return DlOperationSource

