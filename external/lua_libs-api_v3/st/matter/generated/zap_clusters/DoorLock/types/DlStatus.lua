-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.DoorLock.types.DlStatus: st.matter.data_types.Uint8
--- @alias DlStatus
---
--- @field public byte_length number 1
--- @field public SUCCESS number 0
--- @field public FAILURE number 1
--- @field public DUPLICATE number 2
--- @field public OCCUPIED number 3
--- @field public INVALID_FIELD number 133
--- @field public RESOURCE_EXHAUSTED number 137
--- @field public NOT_FOUND number 139

local DlStatus = {}
local new_mt = UintABC.new_mt({NAME = "DlStatus", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.SUCCESS] = "SUCCESS",
    [self.FAILURE] = "FAILURE",
    [self.DUPLICATE] = "DUPLICATE",
    [self.OCCUPIED] = "OCCUPIED",
    [self.INVALID_FIELD] = "INVALID_FIELD",
    [self.RESOURCE_EXHAUSTED] = "RESOURCE_EXHAUSTED",
    [self.NOT_FOUND] = "NOT_FOUND",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.SUCCESS  = 0x00
new_mt.__index.FAILURE  = 0x01
new_mt.__index.DUPLICATE  = 0x02
new_mt.__index.OCCUPIED  = 0x03
new_mt.__index.INVALID_FIELD  = 0x85
new_mt.__index.RESOURCE_EXHAUSTED  = 0x89
new_mt.__index.NOT_FOUND  = 0x8B

DlStatus.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(DlStatus, new_mt)

return DlStatus

