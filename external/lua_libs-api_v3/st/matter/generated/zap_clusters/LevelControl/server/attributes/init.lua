-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local attr_mt = {}
attr_mt.__attr_cache = {}
attr_mt.__index = function(self, key)
  if attr_mt.__attr_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.LevelControl.server.attributes.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    attr_mt.__attr_cache[key] = raw_def
  end
  return attr_mt.__attr_cache[key]
end

--- @class st.matter.generated.zap_clusters.LevelControlServerAttributes
---
--- @field public CurrentLevel st.matter.generated.zap_clusters.LevelControl.server.attributes.CurrentLevel
--- @field public RemainingTime st.matter.generated.zap_clusters.LevelControl.server.attributes.RemainingTime
--- @field public MinLevel st.matter.generated.zap_clusters.LevelControl.server.attributes.MinLevel
--- @field public MaxLevel st.matter.generated.zap_clusters.LevelControl.server.attributes.MaxLevel
--- @field public CurrentFrequency st.matter.generated.zap_clusters.LevelControl.server.attributes.CurrentFrequency
--- @field public MinFrequency st.matter.generated.zap_clusters.LevelControl.server.attributes.MinFrequency
--- @field public MaxFrequency st.matter.generated.zap_clusters.LevelControl.server.attributes.MaxFrequency
--- @field public Options st.matter.generated.zap_clusters.LevelControl.server.attributes.Options
--- @field public OnOffTransitionTime st.matter.generated.zap_clusters.LevelControl.server.attributes.OnOffTransitionTime
--- @field public OnLevel st.matter.generated.zap_clusters.LevelControl.server.attributes.OnLevel
--- @field public OnTransitionTime st.matter.generated.zap_clusters.LevelControl.server.attributes.OnTransitionTime
--- @field public OffTransitionTime st.matter.generated.zap_clusters.LevelControl.server.attributes.OffTransitionTime
--- @field public DefaultMoveRate st.matter.generated.zap_clusters.LevelControl.server.attributes.DefaultMoveRate
--- @field public StartUpCurrentLevel st.matter.generated.zap_clusters.LevelControl.server.attributes.StartUpCurrentLevel
--- @field public AcceptedCommandList st.matter.generated.zap_clusters.LevelControl.server.attributes.AcceptedCommandList
--- @field public AttributeList st.matter.generated.zap_clusters.LevelControl.server.attributes.AttributeList
local LevelControlServerAttributes = {}

function LevelControlServerAttributes:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(LevelControlServerAttributes, attr_mt)

return LevelControlServerAttributes

