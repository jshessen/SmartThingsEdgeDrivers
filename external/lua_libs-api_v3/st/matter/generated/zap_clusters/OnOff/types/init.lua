-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local types_mt = {}
types_mt.__types_cache = {}
types_mt.__index = function(self, key)
  if types_mt.__types_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.OnOff.types.%s", key)
    local cluster_type = require(req_loc)
    types_mt.__types_cache[key] = cluster_type
  end
  return types_mt.__types_cache[key]
end

--- @class st.matter.generated.zap_clusters.OnOffTypes
---
--- @field public OnOffDelayedAllOffEffectVariant st.matter.generated.zap_clusters.OnOff.types.OnOffDelayedAllOffEffectVariant
--- @field public OnOffDyingLightEffectVariant st.matter.generated.zap_clusters.OnOff.types.OnOffDyingLightEffectVariant
--- @field public OnOffEffectIdentifier st.matter.generated.zap_clusters.OnOff.types.OnOffEffectIdentifier
--- @field public OnOffStartUpOnOff st.matter.generated.zap_clusters.OnOff.types.OnOffStartUpOnOff

--- @field public OnOffControl st.matter.generated.zap_clusters.OnOff.types.OnOffControl
--- @field public OnOffFeature st.matter.generated.zap_clusters.OnOff.types.OnOffFeature
--- @field public SceneFeatures st.matter.generated.zap_clusters.OnOff.types.SceneFeatures
local OnOffTypes = {}

setmetatable(OnOffTypes, types_mt)

return OnOffTypes

