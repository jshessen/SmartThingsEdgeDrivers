-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.WindowCovering.types.Type: st.matter.data_types.Uint8
--- @alias Type
---
--- @field public byte_length number 1
--- @field public ROLLER_SHADE number 0
--- @field public ROLLER_SHADE2_MOTOR number 1
--- @field public ROLLER_SHADE_EXTERIOR number 2
--- @field public ROLLER_SHADE_EXTERIOR2_MOTOR number 3
--- @field public DRAPERY number 4
--- @field public AWNING number 5
--- @field public SHUTTER number 6
--- @field public TILT_BLIND_TILT_ONLY number 7
--- @field public TILT_BLIND_LIFT_AND_TILT number 8
--- @field public PROJECTOR_SCREEN number 9
--- @field public UNKNOWN number 255

local Type = {}
local new_mt = UintABC.new_mt({NAME = "Type", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.ROLLER_SHADE] = "ROLLER_SHADE",
    [self.ROLLER_SHADE2_MOTOR] = "ROLLER_SHADE2_MOTOR",
    [self.ROLLER_SHADE_EXTERIOR] = "ROLLER_SHADE_EXTERIOR",
    [self.ROLLER_SHADE_EXTERIOR2_MOTOR] = "ROLLER_SHADE_EXTERIOR2_MOTOR",
    [self.DRAPERY] = "DRAPERY",
    [self.AWNING] = "AWNING",
    [self.SHUTTER] = "SHUTTER",
    [self.TILT_BLIND_TILT_ONLY] = "TILT_BLIND_TILT_ONLY",
    [self.TILT_BLIND_LIFT_AND_TILT] = "TILT_BLIND_LIFT_AND_TILT",
    [self.PROJECTOR_SCREEN] = "PROJECTOR_SCREEN",
    [self.UNKNOWN] = "UNKNOWN",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.ROLLER_SHADE  = 0x00
new_mt.__index.ROLLER_SHADE2_MOTOR  = 0x01
new_mt.__index.ROLLER_SHADE_EXTERIOR  = 0x02
new_mt.__index.ROLLER_SHADE_EXTERIOR2_MOTOR  = 0x03
new_mt.__index.DRAPERY  = 0x04
new_mt.__index.AWNING  = 0x05
new_mt.__index.SHUTTER  = 0x06
new_mt.__index.TILT_BLIND_TILT_ONLY  = 0x07
new_mt.__index.TILT_BLIND_LIFT_AND_TILT  = 0x08
new_mt.__index.PROJECTOR_SCREEN  = 0x09
new_mt.__index.UNKNOWN  = 0xFF

Type.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(Type, new_mt)

return Type

