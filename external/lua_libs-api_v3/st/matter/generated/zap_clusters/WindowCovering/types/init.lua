-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local types_mt = {}
types_mt.__types_cache = {}
types_mt.__index = function(self, key)
  if types_mt.__types_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.WindowCovering.types.%s", key)
    local cluster_type = require(req_loc)
    types_mt.__types_cache[key] = cluster_type
  end
  return types_mt.__types_cache[key]
end

--- @class st.matter.generated.zap_clusters.WindowCoveringTypes
---
--- @field public EndProductType st.matter.generated.zap_clusters.WindowCovering.types.EndProductType
--- @field public Type st.matter.generated.zap_clusters.WindowCovering.types.Type

--- @field public ConfigStatus st.matter.generated.zap_clusters.WindowCovering.types.ConfigStatus
--- @field public Feature st.matter.generated.zap_clusters.WindowCovering.types.Feature
--- @field public Mode st.matter.generated.zap_clusters.WindowCovering.types.Mode
--- @field public OperationalStatus st.matter.generated.zap_clusters.WindowCovering.types.OperationalStatus
--- @field public SafetyStatus st.matter.generated.zap_clusters.WindowCovering.types.SafetyStatus
local WindowCoveringTypes = {}

setmetatable(WindowCoveringTypes, types_mt)

return WindowCoveringTypes

