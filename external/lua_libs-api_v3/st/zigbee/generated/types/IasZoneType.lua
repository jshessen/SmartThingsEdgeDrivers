local data_types = require "st.zigbee.data_types"
local EnumABC = require "st.zigbee.data_types.base_defs.EnumABC"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.types.IasZoneType: st.zigbee.data_types.Enum16
--- @alias IasZoneType
---
--- @field public byte_length number 2
--- @field public STANDARD_CIE number 0
--- @field public MOTION_SENSOR number 13
--- @field public CONTACT_SWITCH number 21
--- @field public DOOR_OR_WINDOW_HANDLE number 22
--- @field public FIRE_SENSOR number 40
--- @field public WATER_SENSOR number 42
--- @field public CARBON_MONOXIDE_SENSOR number 43
--- @field public PERSONAL_EMERGENCY_DEVICE number 44
--- @field public VIBRATION_OR_MOVEMENT_SENSOR number 45
--- @field public REMOTE_CONTROL number 271
--- @field public KEY_FOB number 277
--- @field public KEYPAD number 541
--- @field public STANDARD_WARNING_DEVICE number 549
--- @field public GLASS_BREAK_SENSOR number 550
--- @field public SECURITY_REPEATER number 553
--- @field public INVALID number 65535
local IasZoneType = {}
local new_mt = EnumABC.new_mt({NAME = "IasZoneType", ID = data_types.name_to_id_map["Enum16"]}, 2)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.STANDARD_CIE]                 = "STANDARD_CIE",
    [self.MOTION_SENSOR]                = "MOTION_SENSOR",
    [self.CONTACT_SWITCH]               = "CONTACT_SWITCH",
    [self.DOOR_OR_WINDOW_HANDLE]        = "DOOR_OR_WINDOW_HANDLE",
    [self.FIRE_SENSOR]                  = "FIRE_SENSOR",
    [self.WATER_SENSOR]                 = "WATER_SENSOR",
    [self.CARBON_MONOXIDE_SENSOR]       = "CARBON_MONOXIDE_SENSOR",
    [self.PERSONAL_EMERGENCY_DEVICE]    = "PERSONAL_EMERGENCY_DEVICE",
    [self.VIBRATION_OR_MOVEMENT_SENSOR] = "VIBRATION_OR_MOVEMENT_SENSOR",
    [self.REMOTE_CONTROL]               = "REMOTE_CONTROL",
    [self.KEY_FOB]                      = "KEY_FOB",
    [self.KEYPAD]                       = "KEYPAD",
    [self.STANDARD_WARNING_DEVICE]      = "STANDARD_WARNING_DEVICE",
    [self.GLASS_BREAK_SENSOR]           = "GLASS_BREAK_SENSOR",
    [self.SECURITY_REPEATER]            = "SECURITY_REPEATER",
    [self.INVALID]                      = "INVALID",
  }
  return string.format("%s: %s", self.NAME or self.field_name, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print
new_mt.__index.STANDARD_CIE                 = 0x0000
new_mt.__index.MOTION_SENSOR                = 0x000D
new_mt.__index.CONTACT_SWITCH               = 0x0015
new_mt.__index.DOOR_OR_WINDOW_HANDLE        = 0x0016
new_mt.__index.FIRE_SENSOR                  = 0x0028
new_mt.__index.WATER_SENSOR                 = 0x002A
new_mt.__index.CARBON_MONOXIDE_SENSOR       = 0x002B
new_mt.__index.PERSONAL_EMERGENCY_DEVICE    = 0x002C
new_mt.__index.VIBRATION_OR_MOVEMENT_SENSOR = 0x002D
new_mt.__index.REMOTE_CONTROL               = 0x010F
new_mt.__index.KEY_FOB                      = 0x0115
new_mt.__index.KEYPAD                       = 0x021D
new_mt.__index.STANDARD_WARNING_DEVICE      = 0x0225
new_mt.__index.GLASS_BREAK_SENSOR           = 0x0226
new_mt.__index.SECURITY_REPEATER            = 0x0229
new_mt.__index.INVALID                      = 0xFFFF

setmetatable(IasZoneType, new_mt)

return IasZoneType
