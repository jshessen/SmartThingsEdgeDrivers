local cluster_base = require "st.zigbee.cluster_base"
local data_types = require "st.zigbee.data_types"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.Basic.GenericDeviceType
--- @alias GenericDeviceType
---
--- @field public ID number 0x0009 the ID of this attribute
--- @field public NAME string "GenericDeviceType" the name of this attribute
--- @field public data_type st.zigbee.data_types.Enum8 the data type of this attribute
--- @field public INCANDESCENT number 0
--- @field public SPOTLIGHT_HALOGEN number 1
--- @field public HALOGEN_BULB number 2
--- @field public CFL number 3
--- @field public LINEAR_FLUORESCENT number 4
--- @field public LED_BULB number 5
--- @field public SPOTLIGHT_LED number 6
--- @field public LED_STRIP number 7
--- @field public LED_TUBE number 8
--- @field public GENERIC_INDOOR_LUMINAIRE_OR_LIGHT_FIXTURE number 9
--- @field public GENERIC_OUTDOOR_LUMINAIRE_OR_LIGHT_FIXTURE number 10
--- @field public PENDANT_LUMINAIRE_OR_LIGHT_FIXTURE number 11
--- @field public FLOOR_STANDING_LUMINAIRE_OR_LIGHT_FIXTURE number 12
--- @field public GENERIC_CONTROLLER number 224
--- @field public WALL_SWITCH number 225
--- @field public PORTABLE_REMOTE_CONTROLLER number 226
--- @field public MOTION_SENSOR_OR_LIGHT_SENSOR number 227
--- @field public GENERIC_ACTUATOR number 240
--- @field public WALL_SOCKET number 241
--- @field public GATEWAY_OR_BRIDGE number 242
--- @field public PLUG_IN_UNIT number 243
--- @field public RETROFIT_ACTUATOR number 244
--- @field public UNSPECIFIED number 255
local GenericDeviceType = {
  ID = 0x0009,
  NAME = "GenericDeviceType",
  base_type = data_types.Enum8,
}

GenericDeviceType.INCANDESCENT                               = 0x00
GenericDeviceType.SPOTLIGHT_HALOGEN                          = 0x01
GenericDeviceType.HALOGEN_BULB                               = 0x02
GenericDeviceType.CFL                                        = 0x03
GenericDeviceType.LINEAR_FLUORESCENT                         = 0x04
GenericDeviceType.LED_BULB                                   = 0x05
GenericDeviceType.SPOTLIGHT_LED                              = 0x06
GenericDeviceType.LED_STRIP                                  = 0x07
GenericDeviceType.LED_TUBE                                   = 0x08
GenericDeviceType.GENERIC_INDOOR_LUMINAIRE_OR_LIGHT_FIXTURE  = 0x09
GenericDeviceType.GENERIC_OUTDOOR_LUMINAIRE_OR_LIGHT_FIXTURE = 0x0A
GenericDeviceType.PENDANT_LUMINAIRE_OR_LIGHT_FIXTURE         = 0x0B
GenericDeviceType.FLOOR_STANDING_LUMINAIRE_OR_LIGHT_FIXTURE  = 0x0C
GenericDeviceType.GENERIC_CONTROLLER                         = 0xE0
GenericDeviceType.WALL_SWITCH                                = 0xE1
GenericDeviceType.PORTABLE_REMOTE_CONTROLLER                 = 0xE2
GenericDeviceType.MOTION_SENSOR_OR_LIGHT_SENSOR              = 0xE3
GenericDeviceType.GENERIC_ACTUATOR                           = 0xF0
GenericDeviceType.WALL_SOCKET                                = 0xF1
GenericDeviceType.GATEWAY_OR_BRIDGE                          = 0xF2
GenericDeviceType.PLUG_IN_UNIT                               = 0xF3
GenericDeviceType.RETROFIT_ACTUATOR                          = 0xF4
GenericDeviceType.UNSPECIFIED                                = 0xFF


GenericDeviceType.enum_fields = {
    [GenericDeviceType.INCANDESCENT]                               = "INCANDESCENT",
    [GenericDeviceType.SPOTLIGHT_HALOGEN]                          = "SPOTLIGHT_HALOGEN",
    [GenericDeviceType.HALOGEN_BULB]                               = "HALOGEN_BULB",
    [GenericDeviceType.CFL]                                        = "CFL",
    [GenericDeviceType.LINEAR_FLUORESCENT]                         = "LINEAR_FLUORESCENT",
    [GenericDeviceType.LED_BULB]                                   = "LED_BULB",
    [GenericDeviceType.SPOTLIGHT_LED]                              = "SPOTLIGHT_LED",
    [GenericDeviceType.LED_STRIP]                                  = "LED_STRIP",
    [GenericDeviceType.LED_TUBE]                                   = "LED_TUBE",
    [GenericDeviceType.GENERIC_INDOOR_LUMINAIRE_OR_LIGHT_FIXTURE]  = "GENERIC_INDOOR_LUMINAIRE_OR_LIGHT_FIXTURE",
    [GenericDeviceType.GENERIC_OUTDOOR_LUMINAIRE_OR_LIGHT_FIXTURE] = "GENERIC_OUTDOOR_LUMINAIRE_OR_LIGHT_FIXTURE",
    [GenericDeviceType.PENDANT_LUMINAIRE_OR_LIGHT_FIXTURE]         = "PENDANT_LUMINAIRE_OR_LIGHT_FIXTURE",
    [GenericDeviceType.FLOOR_STANDING_LUMINAIRE_OR_LIGHT_FIXTURE]  = "FLOOR_STANDING_LUMINAIRE_OR_LIGHT_FIXTURE",
    [GenericDeviceType.GENERIC_CONTROLLER]                         = "GENERIC_CONTROLLER",
    [GenericDeviceType.WALL_SWITCH]                                = "WALL_SWITCH",
    [GenericDeviceType.PORTABLE_REMOTE_CONTROLLER]                 = "PORTABLE_REMOTE_CONTROLLER",
    [GenericDeviceType.MOTION_SENSOR_OR_LIGHT_SENSOR]              = "MOTION_SENSOR_OR_LIGHT_SENSOR",
    [GenericDeviceType.GENERIC_ACTUATOR]                           = "GENERIC_ACTUATOR",
    [GenericDeviceType.WALL_SOCKET]                                = "WALL_SOCKET",
    [GenericDeviceType.GATEWAY_OR_BRIDGE]                          = "GATEWAY_OR_BRIDGE",
    [GenericDeviceType.PLUG_IN_UNIT]                               = "PLUG_IN_UNIT",
    [GenericDeviceType.RETROFIT_ACTUATOR]                          = "RETROFIT_ACTUATOR",
    [GenericDeviceType.UNSPECIFIED]                                = "UNSPECIFIED",
}

--- Add additional functionality to the base type object
---
--- @param base_type_obj st.zigbee.data_types.Enum8 the base data type object to add functionality to
function GenericDeviceType:augment_type(base_type_obj)
  for value, key in pairs(self.enum_fields) do
    base_type_obj[key] = value
  end
  base_type_obj.field_name = self.NAME
  base_type_obj.pretty_print = self.pretty_print
end

function GenericDeviceType.pretty_print(value_obj)
  return string.format("%s: %s[%s]", value_obj.field_name or value_obj.NAME, GenericDeviceType.NAME, GenericDeviceType.enum_fields[value_obj.value])
end

--- @function GenericDeviceType:build_test_attr_report
---
--- Build a Rx Zigbee message as if a device reported this attribute
--- @param device st.zigbee.Device
--- @param data st.zigbee.data_types.Enum8 the attribute value
--- @return st.zigbee.ZigbeeMessageRx containing an AttributeReport body
GenericDeviceType.build_test_attr_report = cluster_base.build_test_attr_report

--- @function GenericDeviceType:build_test_read_attr_response
---
--- Build a Rx Zigbee message as if a device sent a read response for this attribute
--- @param device st.zigbee.Device
--- @param data st.zigbee.data_types.Enum8 the attribute value
--- @return st.zigbee.ZigbeeMessageRx containing an ReadAttributeResponse body
GenericDeviceType.build_test_read_attr_response = cluster_base.build_test_read_attr_response

--- Create a Enum8 object of this attribute with any additional features provided for the attribute
---
--- This is also usable with the GenericDeviceType(...) syntax
---
--- @vararg vararg the values needed to construct a Enum8
--- @return st.zigbee.data_types.Enum8
function GenericDeviceType:new_value(...)
    local o = self.base_type(table.unpack({...}))
    self:augment_type(o)
    return o
end

--- Construct a st.zigbee.ZigbeeMessageTx to read this attribute from a device
---
--- @param device st.zigbee.Device
--- @return st.zigbee.ZigbeeMessageTx containing a ReadAttribute body
function GenericDeviceType:read(device)
    return cluster_base.read_attribute(device, data_types.ClusterId(self._cluster.ID), data_types.AttributeId(self.ID))
end

--- Construct a st.zigbee.ZigbeeMessageTx to configure this attribute for reporting on a device
---
--- @param device st.zigbee.Device
--- @param min_rep_int number|st.zigbee.data_types.Uint16 the minimum interval allowed between reports of this attribute
--- @param max_rep_int number|st.zigbee.data_types.Uint16 the maximum interval allowed between reports of this attribute
--- @return st.zigbee.ZigbeeMessageTx containing a ConfigureReporting body
function GenericDeviceType:configure_reporting(device, min_rep_int, max_rep_int)
  local min = data_types.validate_or_build_type(min_rep_int, data_types.Uint16, "minimum_reporting_interval")
  local max = data_types.validate_or_build_type(max_rep_int, data_types.Uint16, "maximum_reporting_interval")
  local rep_change = nil
  return cluster_base.configure_reporting(device, data_types.ClusterId(self._cluster.ID), data_types.AttributeId(self.ID), data_types.ZigbeeDataType(self.base_type.ID), min, max, rep_change)
end

function GenericDeviceType:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(GenericDeviceType, {__call = GenericDeviceType.new_value})
return GenericDeviceType
