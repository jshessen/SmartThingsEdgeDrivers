local cluster_base = require "st.zigbee.cluster_base"
local ColorControlClientAttributes = require "st.zigbee.generated.zcl_clusters.ColorControl.client.attributes" 
local ColorControlServerAttributes = require "st.zigbee.generated.zcl_clusters.ColorControl.server.attributes" 
local ColorControlClientCommands = require "st.zigbee.generated.zcl_clusters.ColorControl.client.commands"
local ColorControlServerCommands = require "st.zigbee.generated.zcl_clusters.ColorControl.server.commands"
local ColorControlTypes = require "st.zigbee.generated.zcl_clusters.ColorControl.types"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.ColorControl
--- @alias ColorControl
---
--- @field public ID number 0x0300 the ID of this cluster
--- @field public NAME string "ColorControl" the name of this cluster
--- @field public attributes st.zigbee.zcl.clusters.ColorControlServerAttributes | st.zigbee.zcl.clusters.ColorControlClientAttributes
--- @field public commands st.zigbee.zcl.clusters.ColorControlServerCommands | st.zigbee.zcl.clusters.ColorControlClientCommands
--- @field public types st.zigbee.zcl.clusters.ColorControlTypes
local ColorControl = {}

ColorControl.ID = 0x0300
ColorControl.NAME = "ColorControl"
ColorControl.server = {}
ColorControl.client = {}
ColorControl.server.attributes = ColorControlServerAttributes:set_parent_cluster(ColorControl) 
ColorControl.client.attributes = ColorControlClientAttributes:set_parent_cluster(ColorControl) 
ColorControl.server.commands = ColorControlServerCommands:set_parent_cluster(ColorControl)
ColorControl.client.commands = ColorControlClientCommands:set_parent_cluster(ColorControl)
ColorControl.types = ColorControlTypes

--- Find an attribute by id
---
--- @param attr_id number
function ColorControl:get_attribute_by_id(attr_id)
  local attr_id_map = {
    [0x0000] = "CurrentHue",
    [0x0001] = "CurrentSaturation",
    [0x0002] = "RemainingTime",
    [0x0003] = "CurrentX",
    [0x0004] = "CurrentY",
    [0x0005] = "DriftCompensation",
    [0x0006] = "CompensationText",
    [0x0007] = "ColorTemperatureMireds",
    [0x0008] = "ColorMode",
    [0x000F] = "Options",
    [0x4000] = "EnhancedCurrentHue",
    [0x4001] = "EnhancedColorMode",
    [0x4002] = "ColorLoopActive",
    [0x4003] = "ColorLoopDirection",
    [0x4004] = "ColorLoopTime",
    [0x4005] = "ColorLoopStartEnhancedHue",
    [0x4006] = "ColorLoopStoredEnhancedHue",
    [0x400A] = "ColorCapabilities",
    [0x400B] = "ColorTempPhysicalMinMireds",
    [0x400C] = "ColorTempPhysicalMaxMireds",
    [0x400D] = "CoupleColorTempToLevelMinMireds",
    [0x4010] = "StartUpColorTemperatureMireds",
    [0x0010] = "NumberOfPrimaries",
    [0x0011] = "Primary1X",
    [0x0012] = "Primary1Y",
    [0x0013] = "Primary1Intensity",
    [0x0015] = "Primary2X",
    [0x0016] = "Primary2Y",
    [0x0017] = "Primary2Intensity",
    [0x0019] = "Primary3X",
    [0x001A] = "Primary3Y",
    [0x001B] = "Primary3Intensity",
    [0x0020] = "Primary4X",
    [0x0021] = "Primary4Y",
    [0x0022] = "Primary4Intensity",
    [0x0024] = "Primary5X",
    [0x0025] = "Primary5Y",
    [0x0026] = "Primary5Intensity",
    [0x0028] = "Primary6X",
    [0x0029] = "Primary6Y",
    [0x002A] = "Primary6Intensity",
    [0x0030] = "WhitePointX",
    [0x0031] = "WhitePointY",
    [0x0032] = "ColorPointRX",
    [0x0033] = "ColorPointRY",
    [0x0034] = "ColorPointRIntensity",
    [0x0036] = "ColorPointGX",
    [0x0037] = "ColorPointGY",
    [0x0038] = "ColorPointGIntensity",
    [0x003A] = "ColorPointBX",
    [0x003B] = "ColorPointBY",
    [0x003C] = "ColorPointBIntensity",
  }
  local attr_name = attr_id_map[attr_id]
  if attr_name ~= nil then
    return self.attributes[attr_name]
  end
  return nil
end
  
--- Find a server command by id
---
--- @param command_id number
function ColorControl:get_server_command_by_id(command_id)
  local server_id_map = {
    [0x00] = "MoveToHue",
    [0x01] = "MoveHue",
    [0x02] = "StepHue",
    [0x03] = "MoveToSaturation",
    [0x04] = "MoveSaturation",
    [0x05] = "StepSaturation",
    [0x06] = "MoveToHueAndSaturation",
    [0x07] = "MoveToColor",
    [0x08] = "MoveColor",
    [0x09] = "StepColor",
    [0x0A] = "MoveToColorTemperature",
    [0x40] = "EnhancedMoveToHue",
    [0x41] = "EnhancedMoveHue",
    [0x42] = "EnhancedStepHue",
    [0x43] = "EnhancedMoveToHueAndSaturation",
    [0x44] = "ColorLoopSet",
    [0x47] = "StopMoveStep",
    [0x4B] = "MoveColorTemperature",
    [0x4C] = "StepColorTemperature",
  }
  if server_id_map[command_id] ~= nil then
    return self.server.commands[server_id_map[command_id]]
  end
  return nil
end

--- Find a client command by id
---
--- @param command_id number
function ColorControl:get_client_command_by_id(command_id)
  local client_id_map = {
  }
  if client_id_map[command_id] ~= nil then
    return self.client.commands[client_id_map[command_id]]
  end
  return nil
end

ColorControl.attribute_direction_map = {
  ["CurrentHue"] = "server",
  ["CurrentSaturation"] = "server",
  ["RemainingTime"] = "server",
  ["CurrentX"] = "server",
  ["CurrentY"] = "server",
  ["DriftCompensation"] = "server",
  ["CompensationText"] = "server",
  ["ColorTemperatureMireds"] = "server",
  ["ColorMode"] = "server",
  ["Options"] = "server",
  ["EnhancedCurrentHue"] = "server",
  ["EnhancedColorMode"] = "server",
  ["ColorLoopActive"] = "server",
  ["ColorLoopDirection"] = "server",
  ["ColorLoopTime"] = "server",
  ["ColorLoopStartEnhancedHue"] = "server",
  ["ColorLoopStoredEnhancedHue"] = "server",
  ["ColorCapabilities"] = "server",
  ["ColorTempPhysicalMinMireds"] = "server",
  ["ColorTempPhysicalMaxMireds"] = "server",
  ["CoupleColorTempToLevelMinMireds"] = "server",
  ["StartUpColorTemperatureMireds"] = "server",
  ["NumberOfPrimaries"] = "server",
  ["Primary1X"] = "server",
  ["Primary1Y"] = "server",
  ["Primary1Intensity"] = "server",
  ["Primary2X"] = "server",
  ["Primary2Y"] = "server",
  ["Primary2Intensity"] = "server",
  ["Primary3X"] = "server",
  ["Primary3Y"] = "server",
  ["Primary3Intensity"] = "server",
  ["Primary4X"] = "server",
  ["Primary4Y"] = "server",
  ["Primary4Intensity"] = "server",
  ["Primary5X"] = "server",
  ["Primary5Y"] = "server",
  ["Primary5Intensity"] = "server",
  ["Primary6X"] = "server",
  ["Primary6Y"] = "server",
  ["Primary6Intensity"] = "server",
  ["WhitePointX"] = "server",
  ["WhitePointY"] = "server",
  ["ColorPointRX"] = "server",
  ["ColorPointRY"] = "server",
  ["ColorPointRIntensity"] = "server",
  ["ColorPointGX"] = "server",
  ["ColorPointGY"] = "server",
  ["ColorPointGIntensity"] = "server",
  ["ColorPointBX"] = "server",
  ["ColorPointBY"] = "server",
  ["ColorPointBIntensity"] = "server",
}
ColorControl.command_direction_map = {
  ["MoveToHue"] = "server",
  ["MoveHue"] = "server",
  ["StepHue"] = "server",
  ["MoveToSaturation"] = "server",
  ["MoveSaturation"] = "server",
  ["StepSaturation"] = "server",
  ["MoveToHueAndSaturation"] = "server",
  ["MoveToColor"] = "server",
  ["MoveColor"] = "server",
  ["StepColor"] = "server",
  ["MoveToColorTemperature"] = "server",
  ["EnhancedMoveToHue"] = "server",
  ["EnhancedMoveHue"] = "server",
  ["EnhancedStepHue"] = "server",
  ["EnhancedMoveToHueAndSaturation"] = "server",
  ["ColorLoopSet"] = "server",
  ["StopMoveStep"] = "server",
  ["MoveColorTemperature"] = "server",
  ["StepColorTemperature"] = "server",
}

local attribute_helper_mt = {}
attribute_helper_mt.__index = function(self, key)
  local direction = ColorControl.attribute_direction_map[key]
  if direction == nil then
    error(string.format("Referenced unknown attribute %s on cluster %s", key, ColorControl.NAME))
  end
  return ColorControl[direction].attributes[key] 
end
ColorControl.attributes = {}
setmetatable(ColorControl.attributes, attribute_helper_mt)

local command_helper_mt = {}
command_helper_mt.__index = function(self, key)
  local direction = ColorControl.command_direction_map[key]
  if direction == nil then
    error(string.format("Referenced unknown command %s on cluster %s", key, ColorControl.NAME))
  end
  return ColorControl[direction].commands[key] 
end
ColorControl.commands = {}
setmetatable(ColorControl.commands, command_helper_mt)

setmetatable(ColorControl, {__index = cluster_base})

return ColorControl
