local data_types = require "st.zigbee.data_types"
local BitmapABC = require "st.zigbee.data_types.base_defs.BitmapABC"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.ColorControl.types.UpdateFlags: st.zigbee.data_types.Bitmap8
--- @alias UpdateFlags
---
--- @field public byte_length number 1
--- @field public UPDATE_ACTION number 1
--- @field public UPDATE_DIRECTION number 2
--- @field public UPDATE_TIME number 4
--- @field public UPDATE_START_HUE number 8
local UpdateFlags = {}
local new_mt = BitmapABC.new_mt({NAME = "UpdateFlags", ID = data_types.name_to_id_map["Bitmap8"]}, 1)
new_mt.__index.BASE_MASK        = 0xFF
new_mt.__index.UPDATE_ACTION    = 0x01
new_mt.__index.UPDATE_DIRECTION = 0x02
new_mt.__index.UPDATE_TIME      = 0x04
new_mt.__index.UPDATE_START_HUE = 0x08

--- @function UpdateFlags:is_update_action_set
--- @return boolean True if the value of UPDATE_ACTION is non-zero
new_mt.__index.is_update_action_set = function(self)
  return (self.value & self.UPDATE_ACTION) ~= 0
end
 
--- @function UpdateFlags:set_update_action
--- Set the value of the bit in the UPDATE_ACTION field to 1
new_mt.__index.set_update_action = function(self)
  self.value = self.value | self.UPDATE_ACTION
end

--- @function UpdateFlags:unset_update_action
--- Set the value of the bits in the UPDATE_ACTION field to 0
new_mt.__index.unset_update_action = function(self)
  self.value = self.value & (~self.UPDATE_ACTION & self.BASE_MASK)
end

--- @function UpdateFlags:is_update_direction_set
--- @return boolean True if the value of UPDATE_DIRECTION is non-zero
new_mt.__index.is_update_direction_set = function(self)
  return (self.value & self.UPDATE_DIRECTION) ~= 0
end
 
--- @function UpdateFlags:set_update_direction
--- Set the value of the bit in the UPDATE_DIRECTION field to 1
new_mt.__index.set_update_direction = function(self)
  self.value = self.value | self.UPDATE_DIRECTION
end

--- @function UpdateFlags:unset_update_direction
--- Set the value of the bits in the UPDATE_DIRECTION field to 0
new_mt.__index.unset_update_direction = function(self)
  self.value = self.value & (~self.UPDATE_DIRECTION & self.BASE_MASK)
end

--- @function UpdateFlags:is_update_time_set
--- @return boolean True if the value of UPDATE_TIME is non-zero
new_mt.__index.is_update_time_set = function(self)
  return (self.value & self.UPDATE_TIME) ~= 0
end
 
--- @function UpdateFlags:set_update_time
--- Set the value of the bit in the UPDATE_TIME field to 1
new_mt.__index.set_update_time = function(self)
  self.value = self.value | self.UPDATE_TIME
end

--- @function UpdateFlags:unset_update_time
--- Set the value of the bits in the UPDATE_TIME field to 0
new_mt.__index.unset_update_time = function(self)
  self.value = self.value & (~self.UPDATE_TIME & self.BASE_MASK)
end

--- @function UpdateFlags:is_update_start_hue_set
--- @return boolean True if the value of UPDATE_START_HUE is non-zero
new_mt.__index.is_update_start_hue_set = function(self)
  return (self.value & self.UPDATE_START_HUE) ~= 0
end
 
--- @function UpdateFlags:set_update_start_hue
--- Set the value of the bit in the UPDATE_START_HUE field to 1
new_mt.__index.set_update_start_hue = function(self)
  self.value = self.value | self.UPDATE_START_HUE
end

--- @function UpdateFlags:unset_update_start_hue
--- Set the value of the bits in the UPDATE_START_HUE field to 0
new_mt.__index.unset_update_start_hue = function(self)
  self.value = self.value & (~self.UPDATE_START_HUE & self.BASE_MASK)
end

setmetatable(UpdateFlags, new_mt)
return UpdateFlags
