local data_types = require "st.zigbee.data_types"
local EnumABC = require "st.zigbee.data_types.base_defs.EnumABC"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.IASACE.types.ArmNotification: st.zigbee.data_types.Enum8
--- @alias ArmNotification
---
--- @field public byte_length number 1
--- @field public ALL_ZONES_DISARMED number 0
--- @field public ONLY_DAY_HOME_ZONES_ARMED number 1
--- @field public ONLY_NIGHT_SLEEP_ZONES_ARMED number 2
--- @field public ALL_ZONES_ARMED number 3
--- @field public INVALID_ARM_DISARM_CODE number 4
--- @field public NOT_READY_TO_ARM number 5
--- @field public ALREADY_DISARMED number 6
local ArmNotification = {}
local new_mt = EnumABC.new_mt({NAME = "ArmNotification", ID = data_types.name_to_id_map["Enum8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.ALL_ZONES_DISARMED]           = "ALL_ZONES_DISARMED",
    [self.ONLY_DAY_HOME_ZONES_ARMED]    = "ONLY_DAY_HOME_ZONES_ARMED",
    [self.ONLY_NIGHT_SLEEP_ZONES_ARMED] = "ONLY_NIGHT_SLEEP_ZONES_ARMED",
    [self.ALL_ZONES_ARMED]              = "ALL_ZONES_ARMED",
    [self.INVALID_ARM_DISARM_CODE]      = "INVALID_ARM_DISARM_CODE",
    [self.NOT_READY_TO_ARM]             = "NOT_READY_TO_ARM",
    [self.ALREADY_DISARMED]             = "ALREADY_DISARMED",
  }
  return string.format("%s: %s", self.NAME or self.field_name, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print
new_mt.__index.ALL_ZONES_DISARMED           = 0x00
new_mt.__index.ONLY_DAY_HOME_ZONES_ARMED    = 0x01
new_mt.__index.ONLY_NIGHT_SLEEP_ZONES_ARMED = 0x02
new_mt.__index.ALL_ZONES_ARMED              = 0x03
new_mt.__index.INVALID_ARM_DISARM_CODE      = 0x04
new_mt.__index.NOT_READY_TO_ARM             = 0x05
new_mt.__index.ALREADY_DISARMED             = 0x06

setmetatable(ArmNotification, new_mt)

return ArmNotification
