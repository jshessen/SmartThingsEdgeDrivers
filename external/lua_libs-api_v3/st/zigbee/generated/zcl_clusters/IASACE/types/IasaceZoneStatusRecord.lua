local data_types = require "st.zigbee.data_types"
local utils = require "st.zigbee.utils"
local IasZoneStatus = require "st.zigbee.generated.types.IasZoneStatus"


-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.IASACE.types.IasaceZoneStatusRecord
--- @alias IasaceZoneStatusRecord 
--- @field public NAME IasaceZoneStatusRecord
--- @field public zone_id st.zigbee.data_types.Uint8
--- @field public zone_status st.zigbee.zcl.types.IasZoneStatus
local IasaceZoneStatusRecord = {}
IasaceZoneStatusRecord.NAME = "IasaceZoneStatusRecord"
IasaceZoneStatusRecord.get_fields = function(self)
  local out = {}
  out[#out + 1] = self.zone_id
  if self.zone_status ~= nil then
    out[#out + 1] = self.zone_status
  end
  return out
end
IasaceZoneStatusRecord.set_field_names = function(self)
  self.zone_id.field_name = "zone_id"
  if self.zone_status ~= nil then
    self.zone_status.field_name = "zone_status"
  end
end

--- @function IasaceZoneStatusRecord:get_length
--- @return number the length in bytes of this frame
IasaceZoneStatusRecord.get_length = utils.length_from_fields

--- @function IasaceZoneStatusRecord:_serialize
--- @return string this class serialized to bytes
IasaceZoneStatusRecord._serialize = utils.serialize_from_fields

--- @function IasaceZoneStatusRecord:pretty_print
--- @return string this class in a human readable format
IasaceZoneStatusRecord.pretty_print = utils.print_from_fields

--- @function IasaceZoneStatusRecord.deserialize
--- @param buf Reader the buf to parse this class from
--- @return number the length in bytes of this frame
IasaceZoneStatusRecord.deserialize = function(buf)
  local o = {}
  o.zone_id = data_types.Uint8.deserialize(buf)
  o.zone_status = nil
  if buf:remain() > 0 then
    o.zone_status = IasZoneStatus.deserialize(buf)
  end
  setmetatable(o, {
    __index = IasaceZoneStatusRecord,
    __tostring = IasaceZoneStatusRecord.pretty_print,
  })
  o:set_field_names()
  return o
end

--- @function IasaceZoneStatusRecord.init
--- @param zone_id st.zigbee.data_types.Uint8
--- @param zone_status st.zigbee.zcl.types.IasZoneStatus
IasaceZoneStatusRecord.init = function(orig, zone_id, zone_status)
  local o = {}
    o.zone_id = data_types.Uint8(zone_id)
    if zone_status ~= nil then
      o.zone_status = IasZoneStatus(zone_status)
    end
  setmetatable(o, {
    __index = orig,
    __tostring = orig.pretty_print
  })
  o:set_field_names()
  return o
end

setmetatable(IasaceZoneStatusRecord, {__call = IasaceZoneStatusRecord.init})
return IasaceZoneStatusRecord
