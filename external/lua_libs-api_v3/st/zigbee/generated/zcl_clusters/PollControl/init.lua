local cluster_base = require "st.zigbee.cluster_base"
local PollControlClientAttributes = require "st.zigbee.generated.zcl_clusters.PollControl.client.attributes" 
local PollControlServerAttributes = require "st.zigbee.generated.zcl_clusters.PollControl.server.attributes" 
local PollControlClientCommands = require "st.zigbee.generated.zcl_clusters.PollControl.client.commands"
local PollControlServerCommands = require "st.zigbee.generated.zcl_clusters.PollControl.server.commands"
local PollControlTypes = require "st.zigbee.generated.zcl_clusters.PollControl.types"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.PollControl
--- @alias PollControl
---
--- @field public ID number 0x0020 the ID of this cluster
--- @field public NAME string "PollControl" the name of this cluster
--- @field public attributes st.zigbee.zcl.clusters.PollControlServerAttributes | st.zigbee.zcl.clusters.PollControlClientAttributes
--- @field public commands st.zigbee.zcl.clusters.PollControlServerCommands | st.zigbee.zcl.clusters.PollControlClientCommands
--- @field public types st.zigbee.zcl.clusters.PollControlTypes
local PollControl = {}

PollControl.ID = 0x0020
PollControl.NAME = "PollControl"
PollControl.server = {}
PollControl.client = {}
PollControl.server.attributes = PollControlServerAttributes:set_parent_cluster(PollControl) 
PollControl.client.attributes = PollControlClientAttributes:set_parent_cluster(PollControl) 
PollControl.server.commands = PollControlServerCommands:set_parent_cluster(PollControl)
PollControl.client.commands = PollControlClientCommands:set_parent_cluster(PollControl)
PollControl.types = PollControlTypes

--- Find an attribute by id
---
--- @param attr_id number
function PollControl:get_attribute_by_id(attr_id)
  local attr_id_map = {
    [0x0000] = "CheckInInterval",
    [0x0001] = "LongPollInterval",
    [0x0002] = "ShortPollInterval",
    [0x0003] = "FastPollTimeout",
    [0x0004] = "CheckInIntervalMin",
    [0x0005] = "LongPollIntervalMin",
    [0x0006] = "FastPollTimeoutMax",
  }
  local attr_name = attr_id_map[attr_id]
  if attr_name ~= nil then
    return self.attributes[attr_name]
  end
  return nil
end
  
--- Find a server command by id
---
--- @param command_id number
function PollControl:get_server_command_by_id(command_id)
  local server_id_map = {
    [0x00] = "CheckInResponse",
    [0x01] = "FastPollStop",
    [0x02] = "SetLongPollInterval",
    [0x03] = "SetShortPollInterval",
  }
  if server_id_map[command_id] ~= nil then
    return self.server.commands[server_id_map[command_id]]
  end
  return nil
end

--- Find a client command by id
---
--- @param command_id number
function PollControl:get_client_command_by_id(command_id)
  local client_id_map = {
    [0x00] = "CheckIn",
  }
  if client_id_map[command_id] ~= nil then
    return self.client.commands[client_id_map[command_id]]
  end
  return nil
end

PollControl.attribute_direction_map = {
  ["CheckInInterval"] = "server",
  ["LongPollInterval"] = "server",
  ["ShortPollInterval"] = "server",
  ["FastPollTimeout"] = "server",
  ["CheckInIntervalMin"] = "server",
  ["LongPollIntervalMin"] = "server",
  ["FastPollTimeoutMax"] = "server",
}
PollControl.command_direction_map = {
  ["CheckIn"] = "client",
  ["CheckInResponse"] = "server",
  ["FastPollStop"] = "server",
  ["SetLongPollInterval"] = "server",
  ["SetShortPollInterval"] = "server",
}

local attribute_helper_mt = {}
attribute_helper_mt.__index = function(self, key)
  local direction = PollControl.attribute_direction_map[key]
  if direction == nil then
    error(string.format("Referenced unknown attribute %s on cluster %s", key, PollControl.NAME))
  end
  return PollControl[direction].attributes[key] 
end
PollControl.attributes = {}
setmetatable(PollControl.attributes, attribute_helper_mt)

local command_helper_mt = {}
command_helper_mt.__index = function(self, key)
  local direction = PollControl.command_direction_map[key]
  if direction == nil then
    error(string.format("Referenced unknown command %s on cluster %s", key, PollControl.NAME))
  end
  return PollControl[direction].commands[key] 
end
PollControl.commands = {}
setmetatable(PollControl.commands, command_helper_mt)

setmetatable(PollControl, {__index = cluster_base})

return PollControl
