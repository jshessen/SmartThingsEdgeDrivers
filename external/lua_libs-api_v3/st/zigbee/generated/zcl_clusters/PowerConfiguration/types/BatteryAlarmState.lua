local data_types = require "st.zigbee.data_types"
local BitmapABC = require "st.zigbee.data_types.base_defs.BitmapABC"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.PowerConfiguration.types.BatteryAlarmState: st.zigbee.data_types.Bitmap32
--- @alias BatteryAlarmState
---
--- @field public byte_length number 4
--- @field public BATTERY1MIN_THRESHOLD number 1
--- @field public BATTERY1THRESHOLD1 number 2
--- @field public BATTERY1THRESHOLD2 number 4
--- @field public BATTERY1THRESHOLD3 number 8
--- @field public BATTERY2MIN_THRESHOLD number 1024
--- @field public BATTERY2THRESHOLD1 number 2048
--- @field public BATTERY2THRESHOLD2 number 4096
--- @field public BATTERY2THRESHOLD3 number 8192
--- @field public BATTERY3MIN_THRESHOLD number 1048576
--- @field public BATTERY3THRESHOLD1 number 2097152
--- @field public BATTERY3THRESHOLD2 number 4194304
--- @field public BATTERY3THRESHOLD3 number 8388608
--- @field public MAINS_POWER_SUPPLY_LOST number 1073741824
local BatteryAlarmState = {}
local new_mt = BitmapABC.new_mt({NAME = "BatteryAlarmState", ID = data_types.name_to_id_map["Bitmap32"]}, 4)
new_mt.__index.BASE_MASK               = 0xFFFFFFFF
new_mt.__index.BATTERY1MIN_THRESHOLD   = 0x00000001
new_mt.__index.BATTERY1THRESHOLD1      = 0x00000002
new_mt.__index.BATTERY1THRESHOLD2      = 0x00000004
new_mt.__index.BATTERY1THRESHOLD3      = 0x00000008
new_mt.__index.BATTERY2MIN_THRESHOLD   = 0x00000400
new_mt.__index.BATTERY2THRESHOLD1      = 0x00000800
new_mt.__index.BATTERY2THRESHOLD2      = 0x00001000
new_mt.__index.BATTERY2THRESHOLD3      = 0x00002000
new_mt.__index.BATTERY3MIN_THRESHOLD   = 0x00100000
new_mt.__index.BATTERY3THRESHOLD1      = 0x00200000
new_mt.__index.BATTERY3THRESHOLD2      = 0x00400000
new_mt.__index.BATTERY3THRESHOLD3      = 0x00800000
new_mt.__index.MAINS_POWER_SUPPLY_LOST = 0x40000000

--- @function BatteryAlarmState:is_battery1min_threshold_set
--- @return boolean True if the value of BATTERY1MIN_THRESHOLD is non-zero
new_mt.__index.is_battery1min_threshold_set = function(self)
  return (self.value & self.BATTERY1MIN_THRESHOLD) ~= 0
end
 
--- @function BatteryAlarmState:set_battery1min_threshold
--- Set the value of the bit in the BATTERY1MIN_THRESHOLD field to 1
new_mt.__index.set_battery1min_threshold = function(self)
  self.value = self.value | self.BATTERY1MIN_THRESHOLD
end

--- @function BatteryAlarmState:unset_battery1min_threshold
--- Set the value of the bits in the BATTERY1MIN_THRESHOLD field to 0
new_mt.__index.unset_battery1min_threshold = function(self)
  self.value = self.value & (~self.BATTERY1MIN_THRESHOLD & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery1threshold1_set
--- @return boolean True if the value of BATTERY1THRESHOLD1 is non-zero
new_mt.__index.is_battery1threshold1_set = function(self)
  return (self.value & self.BATTERY1THRESHOLD1) ~= 0
end
 
--- @function BatteryAlarmState:set_battery1threshold1
--- Set the value of the bit in the BATTERY1THRESHOLD1 field to 1
new_mt.__index.set_battery1threshold1 = function(self)
  self.value = self.value | self.BATTERY1THRESHOLD1
end

--- @function BatteryAlarmState:unset_battery1threshold1
--- Set the value of the bits in the BATTERY1THRESHOLD1 field to 0
new_mt.__index.unset_battery1threshold1 = function(self)
  self.value = self.value & (~self.BATTERY1THRESHOLD1 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery1threshold2_set
--- @return boolean True if the value of BATTERY1THRESHOLD2 is non-zero
new_mt.__index.is_battery1threshold2_set = function(self)
  return (self.value & self.BATTERY1THRESHOLD2) ~= 0
end
 
--- @function BatteryAlarmState:set_battery1threshold2
--- Set the value of the bit in the BATTERY1THRESHOLD2 field to 1
new_mt.__index.set_battery1threshold2 = function(self)
  self.value = self.value | self.BATTERY1THRESHOLD2
end

--- @function BatteryAlarmState:unset_battery1threshold2
--- Set the value of the bits in the BATTERY1THRESHOLD2 field to 0
new_mt.__index.unset_battery1threshold2 = function(self)
  self.value = self.value & (~self.BATTERY1THRESHOLD2 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery1threshold3_set
--- @return boolean True if the value of BATTERY1THRESHOLD3 is non-zero
new_mt.__index.is_battery1threshold3_set = function(self)
  return (self.value & self.BATTERY1THRESHOLD3) ~= 0
end
 
--- @function BatteryAlarmState:set_battery1threshold3
--- Set the value of the bit in the BATTERY1THRESHOLD3 field to 1
new_mt.__index.set_battery1threshold3 = function(self)
  self.value = self.value | self.BATTERY1THRESHOLD3
end

--- @function BatteryAlarmState:unset_battery1threshold3
--- Set the value of the bits in the BATTERY1THRESHOLD3 field to 0
new_mt.__index.unset_battery1threshold3 = function(self)
  self.value = self.value & (~self.BATTERY1THRESHOLD3 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery2min_threshold_set
--- @return boolean True if the value of BATTERY2MIN_THRESHOLD is non-zero
new_mt.__index.is_battery2min_threshold_set = function(self)
  return (self.value & self.BATTERY2MIN_THRESHOLD) ~= 0
end
 
--- @function BatteryAlarmState:set_battery2min_threshold
--- Set the value of the bit in the BATTERY2MIN_THRESHOLD field to 1
new_mt.__index.set_battery2min_threshold = function(self)
  self.value = self.value | self.BATTERY2MIN_THRESHOLD
end

--- @function BatteryAlarmState:unset_battery2min_threshold
--- Set the value of the bits in the BATTERY2MIN_THRESHOLD field to 0
new_mt.__index.unset_battery2min_threshold = function(self)
  self.value = self.value & (~self.BATTERY2MIN_THRESHOLD & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery2threshold1_set
--- @return boolean True if the value of BATTERY2THRESHOLD1 is non-zero
new_mt.__index.is_battery2threshold1_set = function(self)
  return (self.value & self.BATTERY2THRESHOLD1) ~= 0
end
 
--- @function BatteryAlarmState:set_battery2threshold1
--- Set the value of the bit in the BATTERY2THRESHOLD1 field to 1
new_mt.__index.set_battery2threshold1 = function(self)
  self.value = self.value | self.BATTERY2THRESHOLD1
end

--- @function BatteryAlarmState:unset_battery2threshold1
--- Set the value of the bits in the BATTERY2THRESHOLD1 field to 0
new_mt.__index.unset_battery2threshold1 = function(self)
  self.value = self.value & (~self.BATTERY2THRESHOLD1 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery2threshold2_set
--- @return boolean True if the value of BATTERY2THRESHOLD2 is non-zero
new_mt.__index.is_battery2threshold2_set = function(self)
  return (self.value & self.BATTERY2THRESHOLD2) ~= 0
end
 
--- @function BatteryAlarmState:set_battery2threshold2
--- Set the value of the bit in the BATTERY2THRESHOLD2 field to 1
new_mt.__index.set_battery2threshold2 = function(self)
  self.value = self.value | self.BATTERY2THRESHOLD2
end

--- @function BatteryAlarmState:unset_battery2threshold2
--- Set the value of the bits in the BATTERY2THRESHOLD2 field to 0
new_mt.__index.unset_battery2threshold2 = function(self)
  self.value = self.value & (~self.BATTERY2THRESHOLD2 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery2threshold3_set
--- @return boolean True if the value of BATTERY2THRESHOLD3 is non-zero
new_mt.__index.is_battery2threshold3_set = function(self)
  return (self.value & self.BATTERY2THRESHOLD3) ~= 0
end
 
--- @function BatteryAlarmState:set_battery2threshold3
--- Set the value of the bit in the BATTERY2THRESHOLD3 field to 1
new_mt.__index.set_battery2threshold3 = function(self)
  self.value = self.value | self.BATTERY2THRESHOLD3
end

--- @function BatteryAlarmState:unset_battery2threshold3
--- Set the value of the bits in the BATTERY2THRESHOLD3 field to 0
new_mt.__index.unset_battery2threshold3 = function(self)
  self.value = self.value & (~self.BATTERY2THRESHOLD3 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery3min_threshold_set
--- @return boolean True if the value of BATTERY3MIN_THRESHOLD is non-zero
new_mt.__index.is_battery3min_threshold_set = function(self)
  return (self.value & self.BATTERY3MIN_THRESHOLD) ~= 0
end
 
--- @function BatteryAlarmState:set_battery3min_threshold
--- Set the value of the bit in the BATTERY3MIN_THRESHOLD field to 1
new_mt.__index.set_battery3min_threshold = function(self)
  self.value = self.value | self.BATTERY3MIN_THRESHOLD
end

--- @function BatteryAlarmState:unset_battery3min_threshold
--- Set the value of the bits in the BATTERY3MIN_THRESHOLD field to 0
new_mt.__index.unset_battery3min_threshold = function(self)
  self.value = self.value & (~self.BATTERY3MIN_THRESHOLD & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery3threshold1_set
--- @return boolean True if the value of BATTERY3THRESHOLD1 is non-zero
new_mt.__index.is_battery3threshold1_set = function(self)
  return (self.value & self.BATTERY3THRESHOLD1) ~= 0
end
 
--- @function BatteryAlarmState:set_battery3threshold1
--- Set the value of the bit in the BATTERY3THRESHOLD1 field to 1
new_mt.__index.set_battery3threshold1 = function(self)
  self.value = self.value | self.BATTERY3THRESHOLD1
end

--- @function BatteryAlarmState:unset_battery3threshold1
--- Set the value of the bits in the BATTERY3THRESHOLD1 field to 0
new_mt.__index.unset_battery3threshold1 = function(self)
  self.value = self.value & (~self.BATTERY3THRESHOLD1 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery3threshold2_set
--- @return boolean True if the value of BATTERY3THRESHOLD2 is non-zero
new_mt.__index.is_battery3threshold2_set = function(self)
  return (self.value & self.BATTERY3THRESHOLD2) ~= 0
end
 
--- @function BatteryAlarmState:set_battery3threshold2
--- Set the value of the bit in the BATTERY3THRESHOLD2 field to 1
new_mt.__index.set_battery3threshold2 = function(self)
  self.value = self.value | self.BATTERY3THRESHOLD2
end

--- @function BatteryAlarmState:unset_battery3threshold2
--- Set the value of the bits in the BATTERY3THRESHOLD2 field to 0
new_mt.__index.unset_battery3threshold2 = function(self)
  self.value = self.value & (~self.BATTERY3THRESHOLD2 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_battery3threshold3_set
--- @return boolean True if the value of BATTERY3THRESHOLD3 is non-zero
new_mt.__index.is_battery3threshold3_set = function(self)
  return (self.value & self.BATTERY3THRESHOLD3) ~= 0
end
 
--- @function BatteryAlarmState:set_battery3threshold3
--- Set the value of the bit in the BATTERY3THRESHOLD3 field to 1
new_mt.__index.set_battery3threshold3 = function(self)
  self.value = self.value | self.BATTERY3THRESHOLD3
end

--- @function BatteryAlarmState:unset_battery3threshold3
--- Set the value of the bits in the BATTERY3THRESHOLD3 field to 0
new_mt.__index.unset_battery3threshold3 = function(self)
  self.value = self.value & (~self.BATTERY3THRESHOLD3 & self.BASE_MASK)
end

--- @function BatteryAlarmState:is_mains_power_supply_lost_set
--- @return boolean True if the value of MAINS_POWER_SUPPLY_LOST is non-zero
new_mt.__index.is_mains_power_supply_lost_set = function(self)
  return (self.value & self.MAINS_POWER_SUPPLY_LOST) ~= 0
end
 
--- @function BatteryAlarmState:set_mains_power_supply_lost
--- Set the value of the bit in the MAINS_POWER_SUPPLY_LOST field to 1
new_mt.__index.set_mains_power_supply_lost = function(self)
  self.value = self.value | self.MAINS_POWER_SUPPLY_LOST
end

--- @function BatteryAlarmState:unset_mains_power_supply_lost
--- Set the value of the bits in the MAINS_POWER_SUPPLY_LOST field to 0
new_mt.__index.unset_mains_power_supply_lost = function(self)
  self.value = self.value & (~self.MAINS_POWER_SUPPLY_LOST & self.BASE_MASK)
end

setmetatable(BatteryAlarmState, new_mt)
return BatteryAlarmState
