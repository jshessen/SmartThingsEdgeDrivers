local data_types = require "st.zigbee.data_types"
local utils = require "st.zigbee.utils"


-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.TouchlinkCommissioning.types.TlGroupInformationRecord
--- @alias TlGroupInformationRecord 
--- @field public NAME TlGroupInformationRecord
--- @field public group_identifier st.zigbee.data_types.Uint16
--- @field public group_type st.zigbee.data_types.Uint8
local TlGroupInformationRecord = {}
TlGroupInformationRecord.NAME = "TlGroupInformationRecord"
TlGroupInformationRecord.get_fields = function(self)
  local out = {}
  out[#out + 1] = self.group_identifier
  if self.group_type ~= nil then
    out[#out + 1] = self.group_type
  end
  return out
end
TlGroupInformationRecord.set_field_names = function(self)
  self.group_identifier.field_name = "group_identifier"
  if self.group_type ~= nil then
    self.group_type.field_name = "group_type"
  end
end

--- @function TlGroupInformationRecord:get_length
--- @return number the length in bytes of this frame
TlGroupInformationRecord.get_length = utils.length_from_fields

--- @function TlGroupInformationRecord:_serialize
--- @return string this class serialized to bytes
TlGroupInformationRecord._serialize = utils.serialize_from_fields

--- @function TlGroupInformationRecord:pretty_print
--- @return string this class in a human readable format
TlGroupInformationRecord.pretty_print = utils.print_from_fields

--- @function TlGroupInformationRecord.deserialize
--- @param buf Reader the buf to parse this class from
--- @return number the length in bytes of this frame
TlGroupInformationRecord.deserialize = function(buf)
  local o = {}
  o.group_identifier = data_types.Uint16.deserialize(buf)
  o.group_type = nil
  if buf:remain() > 0 then
    o.group_type = data_types.Uint8.deserialize(buf)
  end
  setmetatable(o, {
    __index = TlGroupInformationRecord,
    __tostring = TlGroupInformationRecord.pretty_print,
  })
  o:set_field_names()
  return o
end

--- @function TlGroupInformationRecord.init
--- @param group_identifier st.zigbee.data_types.Uint16
--- @param group_type st.zigbee.data_types.Uint8
TlGroupInformationRecord.init = function(orig, group_identifier, group_type)
  local o = {}
    o.group_identifier = data_types.Uint16(group_identifier)
    if group_type ~= nil then
      o.group_type = data_types.Uint8(group_type)
    end
  setmetatable(o, {
    __index = orig,
    __tostring = orig.pretty_print
  })
  o:set_field_names()
  return o
end

setmetatable(TlGroupInformationRecord, {__call = TlGroupInformationRecord.init})
return TlGroupInformationRecord
