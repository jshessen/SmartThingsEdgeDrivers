local data_types = require "st.zigbee.data_types"
local BitmapABC = require "st.zigbee.data_types.base_defs.BitmapABC"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.TouchlinkCommissioning.types.TlTouchlinkInformation: st.zigbee.data_types.Bitmap8
--- @alias TlTouchlinkInformation
---
--- @field public byte_length number 1
--- @field public FACTORY_NEW number 1
--- @field public ADDRESS_ASSIGNMENT number 2
--- @field public LINK_INITIATOR number 16
--- @field public TOUCHLINK_PRIORITY_REQUEST number 32
--- @field public PROFILE_INTEROP number 128
local TlTouchlinkInformation = {}
local new_mt = BitmapABC.new_mt({NAME = "TlTouchlinkInformation", ID = data_types.name_to_id_map["Bitmap8"]}, 1)
new_mt.__index.BASE_MASK                  = 0xFF
new_mt.__index.FACTORY_NEW                = 0x01
new_mt.__index.ADDRESS_ASSIGNMENT         = 0x02
new_mt.__index.LINK_INITIATOR             = 0x10
new_mt.__index.TOUCHLINK_PRIORITY_REQUEST = 0x20
new_mt.__index.PROFILE_INTEROP            = 0x80

--- @function TlTouchlinkInformation:is_factory_new_set
--- @return boolean True if the value of FACTORY_NEW is non-zero
new_mt.__index.is_factory_new_set = function(self)
  return (self.value & self.FACTORY_NEW) ~= 0
end
 
--- @function TlTouchlinkInformation:set_factory_new
--- Set the value of the bit in the FACTORY_NEW field to 1
new_mt.__index.set_factory_new = function(self)
  self.value = self.value | self.FACTORY_NEW
end

--- @function TlTouchlinkInformation:unset_factory_new
--- Set the value of the bits in the FACTORY_NEW field to 0
new_mt.__index.unset_factory_new = function(self)
  self.value = self.value & (~self.FACTORY_NEW & self.BASE_MASK)
end

--- @function TlTouchlinkInformation:is_address_assignment_set
--- @return boolean True if the value of ADDRESS_ASSIGNMENT is non-zero
new_mt.__index.is_address_assignment_set = function(self)
  return (self.value & self.ADDRESS_ASSIGNMENT) ~= 0
end
 
--- @function TlTouchlinkInformation:set_address_assignment
--- Set the value of the bit in the ADDRESS_ASSIGNMENT field to 1
new_mt.__index.set_address_assignment = function(self)
  self.value = self.value | self.ADDRESS_ASSIGNMENT
end

--- @function TlTouchlinkInformation:unset_address_assignment
--- Set the value of the bits in the ADDRESS_ASSIGNMENT field to 0
new_mt.__index.unset_address_assignment = function(self)
  self.value = self.value & (~self.ADDRESS_ASSIGNMENT & self.BASE_MASK)
end

--- @function TlTouchlinkInformation:is_link_initiator_set
--- @return boolean True if the value of LINK_INITIATOR is non-zero
new_mt.__index.is_link_initiator_set = function(self)
  return (self.value & self.LINK_INITIATOR) ~= 0
end
 
--- @function TlTouchlinkInformation:set_link_initiator
--- Set the value of the bit in the LINK_INITIATOR field to 1
new_mt.__index.set_link_initiator = function(self)
  self.value = self.value | self.LINK_INITIATOR
end

--- @function TlTouchlinkInformation:unset_link_initiator
--- Set the value of the bits in the LINK_INITIATOR field to 0
new_mt.__index.unset_link_initiator = function(self)
  self.value = self.value & (~self.LINK_INITIATOR & self.BASE_MASK)
end

--- @function TlTouchlinkInformation:is_touchlink_priority_request_set
--- @return boolean True if the value of TOUCHLINK_PRIORITY_REQUEST is non-zero
new_mt.__index.is_touchlink_priority_request_set = function(self)
  return (self.value & self.TOUCHLINK_PRIORITY_REQUEST) ~= 0
end
 
--- @function TlTouchlinkInformation:set_touchlink_priority_request
--- Set the value of the bit in the TOUCHLINK_PRIORITY_REQUEST field to 1
new_mt.__index.set_touchlink_priority_request = function(self)
  self.value = self.value | self.TOUCHLINK_PRIORITY_REQUEST
end

--- @function TlTouchlinkInformation:unset_touchlink_priority_request
--- Set the value of the bits in the TOUCHLINK_PRIORITY_REQUEST field to 0
new_mt.__index.unset_touchlink_priority_request = function(self)
  self.value = self.value & (~self.TOUCHLINK_PRIORITY_REQUEST & self.BASE_MASK)
end

--- @function TlTouchlinkInformation:is_profile_interop_set
--- @return boolean True if the value of PROFILE_INTEROP is non-zero
new_mt.__index.is_profile_interop_set = function(self)
  return (self.value & self.PROFILE_INTEROP) ~= 0
end
 
--- @function TlTouchlinkInformation:set_profile_interop
--- Set the value of the bit in the PROFILE_INTEROP field to 1
new_mt.__index.set_profile_interop = function(self)
  self.value = self.value | self.PROFILE_INTEROP
end

--- @function TlTouchlinkInformation:unset_profile_interop
--- Set the value of the bits in the PROFILE_INTEROP field to 0
new_mt.__index.unset_profile_interop = function(self)
  self.value = self.value & (~self.PROFILE_INTEROP & self.BASE_MASK)
end

setmetatable(TlTouchlinkInformation, new_mt)
return TlTouchlinkInformation
