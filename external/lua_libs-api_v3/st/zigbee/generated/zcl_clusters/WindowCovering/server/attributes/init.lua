-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

local attr_mt = {}
attr_mt.__attr_cache = {}
attr_mt.__index = function(self, key)
  if attr_mt.__attr_cache[key] == nil then
    local req_loc = string.format("st.zigbee.generated.zcl_clusters.WindowCovering.server.attributes.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    attr_mt.__attr_cache[key] = raw_def 
  end
  return attr_mt.__attr_cache[key]
end


--- @class st.zigbee.zcl.clusters.WindowCoveringServerAttributes
---
--- @field public WindowCoveringType st.zigbee.zcl.clusters.WindowCovering.WindowCoveringType
--- @field public PhysicalClosedLimitLift st.zigbee.zcl.clusters.WindowCovering.PhysicalClosedLimitLift
--- @field public PhysicalClosedLimitTilt st.zigbee.zcl.clusters.WindowCovering.PhysicalClosedLimitTilt
--- @field public CurrentPositionLift st.zigbee.zcl.clusters.WindowCovering.CurrentPositionLift
--- @field public CurrentPositionTilt st.zigbee.zcl.clusters.WindowCovering.CurrentPositionTilt
--- @field public NumberOfActuationsLift st.zigbee.zcl.clusters.WindowCovering.NumberOfActuationsLift
--- @field public NumberOfActuationsTilt st.zigbee.zcl.clusters.WindowCovering.NumberOfActuationsTilt
--- @field public ConfigOrStatus st.zigbee.zcl.clusters.WindowCovering.ConfigOrStatus
--- @field public CurrentPositionLiftPercentage st.zigbee.zcl.clusters.WindowCovering.CurrentPositionLiftPercentage
--- @field public CurrentPositionTiltPercentage st.zigbee.zcl.clusters.WindowCovering.CurrentPositionTiltPercentage
--- @field public InstalledOpenLimitLift st.zigbee.zcl.clusters.WindowCovering.InstalledOpenLimitLift
--- @field public InstalledClosedLimitLift st.zigbee.zcl.clusters.WindowCovering.InstalledClosedLimitLift
--- @field public InstalledOpenLimitTilt st.zigbee.zcl.clusters.WindowCovering.InstalledOpenLimitTilt
--- @field public InstalledClosedLimitTilt st.zigbee.zcl.clusters.WindowCovering.InstalledClosedLimitTilt
--- @field public VelocityLift st.zigbee.zcl.clusters.WindowCovering.VelocityLift
--- @field public AccelerationTimeLift st.zigbee.zcl.clusters.WindowCovering.AccelerationTimeLift
--- @field public DecelerationTimeLift st.zigbee.zcl.clusters.WindowCovering.DecelerationTimeLift
--- @field public Mode st.zigbee.zcl.clusters.WindowCovering.Mode
--- @field public IntermediateSetpointsLift st.zigbee.zcl.clusters.WindowCovering.IntermediateSetpointsLift
--- @field public IntermediateSetpointsTilt st.zigbee.zcl.clusters.WindowCovering.IntermediateSetpointsTilt

local WindowCoveringServerAttributes = {}

function WindowCoveringServerAttributes:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(WindowCoveringServerAttributes, attr_mt)

return WindowCoveringServerAttributes
