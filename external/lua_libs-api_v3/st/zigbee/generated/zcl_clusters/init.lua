-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters
---
--- @field public Basic st.zigbee.zcl.clusters.Basic
--- @field public PowerConfiguration st.zigbee.zcl.clusters.PowerConfiguration
--- @field public DeviceTemperatureConfiguration st.zigbee.zcl.clusters.DeviceTemperatureConfiguration
--- @field public Identify st.zigbee.zcl.clusters.Identify
--- @field public Groups st.zigbee.zcl.clusters.Groups
--- @field public Scenes st.zigbee.zcl.clusters.Scenes
--- @field public OnOff st.zigbee.zcl.clusters.OnOff
--- @field public Level st.zigbee.zcl.clusters.Level
--- @field public Alarms st.zigbee.zcl.clusters.Alarms
--- @field public Time st.zigbee.zcl.clusters.Time
--- @field public AnalogInput st.zigbee.zcl.clusters.AnalogInput
--- @field public AnalogOutput st.zigbee.zcl.clusters.AnalogOutput
--- @field public BasicInput st.zigbee.zcl.clusters.BasicInput
--- @field public Commissioning st.zigbee.zcl.clusters.Commissioning
--- @field public OTAUpgrade st.zigbee.zcl.clusters.OTAUpgrade
--- @field public PollControl st.zigbee.zcl.clusters.PollControl
--- @field public ShadeConfiguration st.zigbee.zcl.clusters.ShadeConfiguration
--- @field public DoorLock st.zigbee.zcl.clusters.DoorLock
--- @field public WindowCovering st.zigbee.zcl.clusters.WindowCovering
--- @field public BarrierControl st.zigbee.zcl.clusters.BarrierControl
--- @field public PumpConfigurationAndControl st.zigbee.zcl.clusters.PumpConfigurationAndControl
--- @field public Thermostat st.zigbee.zcl.clusters.Thermostat
--- @field public FanControl st.zigbee.zcl.clusters.FanControl
--- @field public DehumidificationControl st.zigbee.zcl.clusters.DehumidificationControl
--- @field public ThermostatUserInterfaceConfiguration st.zigbee.zcl.clusters.ThermostatUserInterfaceConfiguration
--- @field public ColorControl st.zigbee.zcl.clusters.ColorControl
--- @field public BallastConfiguration st.zigbee.zcl.clusters.BallastConfiguration
--- @field public IlluminanceMeasurement st.zigbee.zcl.clusters.IlluminanceMeasurement
--- @field public IlluminanceLevelSensing st.zigbee.zcl.clusters.IlluminanceLevelSensing
--- @field public TemperatureMeasurement st.zigbee.zcl.clusters.TemperatureMeasurement
--- @field public PressureMeasurement st.zigbee.zcl.clusters.PressureMeasurement
--- @field public FlowMeasurement st.zigbee.zcl.clusters.FlowMeasurement
--- @field public RelativeHumidity st.zigbee.zcl.clusters.RelativeHumidity
--- @field public OccupancySensing st.zigbee.zcl.clusters.OccupancySensing
--- @field public PhMeasurement st.zigbee.zcl.clusters.PhMeasurement
--- @field public ElectricalConductivityMeasurement st.zigbee.zcl.clusters.ElectricalConductivityMeasurement
--- @field public WindSpeedMeasurement st.zigbee.zcl.clusters.WindSpeedMeasurement
--- @field public CarbonMonoxide st.zigbee.zcl.clusters.CarbonMonoxide
--- @field public IASZone st.zigbee.zcl.clusters.IASZone
--- @field public IASACE st.zigbee.zcl.clusters.IASACE
--- @field public IASWD st.zigbee.zcl.clusters.IASWD
--- @field public SimpleMetering st.zigbee.zcl.clusters.SimpleMetering
--- @field public ApplianceEventsAlerts st.zigbee.zcl.clusters.ApplianceEventsAlerts
--- @field public ElectricalMeasurement st.zigbee.zcl.clusters.ElectricalMeasurement
--- @field public Diagnostics st.zigbee.zcl.clusters.Diagnostics
--- @field public TouchlinkCommissioning st.zigbee.zcl.clusters.TouchlinkCommissioning
local zcl_clusters = {}

zcl_clusters.basic_id                                   = 0x0000
zcl_clusters.power_configuration_id                     = 0x0001
zcl_clusters.device_temperature_configuration_id        = 0x0002
zcl_clusters.identify_id                                = 0x0003
zcl_clusters.groups_id                                  = 0x0004
zcl_clusters.scenes_id                                  = 0x0005
zcl_clusters.on_off_id                                  = 0x0006
zcl_clusters.level_id                                   = 0x0008
zcl_clusters.alarms_id                                  = 0x0009
zcl_clusters.time_id                                    = 0x000A
zcl_clusters.analog_input_id                            = 0x000C
zcl_clusters.analog_output_id                           = 0x000D
zcl_clusters.basic_input_id                             = 0x000F
zcl_clusters.commissioning_id                           = 0x0015
zcl_clusters.ota_upgrade_id                             = 0x0019
zcl_clusters.poll_control_id                            = 0x0020
zcl_clusters.shade_configuration_id                     = 0x0100
zcl_clusters.door_lock_id                               = 0x0101
zcl_clusters.window_covering_id                         = 0x0102
zcl_clusters.barrier_control_id                         = 0x0103
zcl_clusters.pump_configuration_and_control_id          = 0x0200
zcl_clusters.thermostat_id                              = 0x0201
zcl_clusters.fan_control_id                             = 0x0202
zcl_clusters.dehumidification_control_id                = 0x0203
zcl_clusters.thermostat_user_interface_configuration_id = 0x0204
zcl_clusters.color_control_id                           = 0x0300
zcl_clusters.ballast_configuration_id                   = 0x0301
zcl_clusters.illuminance_measurement_id                 = 0x0400
zcl_clusters.illuminance_level_sensing_id               = 0x0401
zcl_clusters.temperature_measurement_id                 = 0x0402
zcl_clusters.pressure_measurement_id                    = 0x0403
zcl_clusters.flow_measurement_id                        = 0x0404
zcl_clusters.relative_humidity_id                       = 0x0405
zcl_clusters.occupancy_sensing_id                       = 0x0406
zcl_clusters.ph_measurement_id                          = 0x0409
zcl_clusters.electrical_conductivity_measurement_id     = 0x040A
zcl_clusters.wind_speed_measurement_id                  = 0x040B
zcl_clusters.carbon_monoxide_id                         = 0x040C
zcl_clusters.ias_zone_id                                = 0x0500
zcl_clusters.iasace_id                                  = 0x0501
zcl_clusters.iaswd_id                                   = 0x0502
zcl_clusters.simple_metering_id                         = 0x0702
zcl_clusters.appliance_events_alerts_id                 = 0x0B02
zcl_clusters.electrical_measurement_id                  = 0x0B04
zcl_clusters.diagnostics_id                             = 0x0B05
zcl_clusters.touchlink_commissioning_id                 = 0x1000

zcl_clusters.cluster_cache = {}

zcl_clusters.id_to_name_map = {
    [zcl_clusters.basic_id]                                   = "Basic",
    [zcl_clusters.power_configuration_id]                     = "PowerConfiguration",
    [zcl_clusters.device_temperature_configuration_id]        = "DeviceTemperatureConfiguration",
    [zcl_clusters.identify_id]                                = "Identify",
    [zcl_clusters.groups_id]                                  = "Groups",
    [zcl_clusters.scenes_id]                                  = "Scenes",
    [zcl_clusters.on_off_id]                                  = "OnOff",
    [zcl_clusters.level_id]                                   = "Level",
    [zcl_clusters.alarms_id]                                  = "Alarms",
    [zcl_clusters.time_id]                                    = "Time",
    [zcl_clusters.analog_input_id]                            = "AnalogInput",
    [zcl_clusters.analog_output_id]                           = "AnalogOutput",
    [zcl_clusters.basic_input_id]                             = "BasicInput",
    [zcl_clusters.commissioning_id]                           = "Commissioning",
    [zcl_clusters.ota_upgrade_id]                             = "OTAUpgrade",
    [zcl_clusters.poll_control_id]                            = "PollControl",
    [zcl_clusters.shade_configuration_id]                     = "ShadeConfiguration",
    [zcl_clusters.door_lock_id]                               = "DoorLock",
    [zcl_clusters.window_covering_id]                         = "WindowCovering",
    [zcl_clusters.barrier_control_id]                         = "BarrierControl",
    [zcl_clusters.pump_configuration_and_control_id]          = "PumpConfigurationAndControl",
    [zcl_clusters.thermostat_id]                              = "Thermostat",
    [zcl_clusters.fan_control_id]                             = "FanControl",
    [zcl_clusters.dehumidification_control_id]                = "DehumidificationControl",
    [zcl_clusters.thermostat_user_interface_configuration_id] = "ThermostatUserInterfaceConfiguration",
    [zcl_clusters.color_control_id]                           = "ColorControl",
    [zcl_clusters.ballast_configuration_id]                   = "BallastConfiguration",
    [zcl_clusters.illuminance_measurement_id]                 = "IlluminanceMeasurement",
    [zcl_clusters.illuminance_level_sensing_id]               = "IlluminanceLevelSensing",
    [zcl_clusters.temperature_measurement_id]                 = "TemperatureMeasurement",
    [zcl_clusters.pressure_measurement_id]                    = "PressureMeasurement",
    [zcl_clusters.flow_measurement_id]                        = "FlowMeasurement",
    [zcl_clusters.relative_humidity_id]                       = "RelativeHumidity",
    [zcl_clusters.occupancy_sensing_id]                       = "OccupancySensing",
    [zcl_clusters.ph_measurement_id]                          = "PhMeasurement",
    [zcl_clusters.electrical_conductivity_measurement_id]     = "ElectricalConductivityMeasurement",
    [zcl_clusters.wind_speed_measurement_id]                  = "WindSpeedMeasurement",
    [zcl_clusters.carbon_monoxide_id]                         = "CarbonMonoxide",
    [zcl_clusters.ias_zone_id]                                = "IASZone",
    [zcl_clusters.iasace_id]                                  = "IASACE",
    [zcl_clusters.iaswd_id]                                   = "IASWD",
    [zcl_clusters.simple_metering_id]                         = "SimpleMetering",
    [zcl_clusters.appliance_events_alerts_id]                 = "ApplianceEventsAlerts",
    [zcl_clusters.electrical_measurement_id]                  = "ElectricalMeasurement",
    [zcl_clusters.diagnostics_id]                             = "Diagnostics",
    [zcl_clusters.touchlink_commissioning_id]                 = "TouchlinkCommissioning",
}

local zcl_clusters_mt = {}
zcl_clusters_mt.__cluster_cache = {}
zcl_clusters_mt.__index = function(self, key)
  if zcl_clusters_mt.__cluster_cache[key] == nil then
    local req_loq = string.format("st.zigbee.generated.zcl_clusters.%s", key)
    zcl_clusters_mt.__cluster_cache[key] = require(req_loq)
  end
  return zcl_clusters_mt.__cluster_cache[key]
end
setmetatable(zcl_clusters, zcl_clusters_mt)

zcl_clusters.get_cluster_from_id = function(id)
  local cluster_name = zcl_clusters.id_to_name_map[id]
  if cluster_name ~= nil then
    return zcl_clusters[cluster_name]
  end
  return nil
end

return zcl_clusters
