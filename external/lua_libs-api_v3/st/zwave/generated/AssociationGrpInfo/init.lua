-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- THIS CODE IS AUTOMATICALLY GENERATED BY zwave_lib_generator/gen.py.  DO NOT HAND EDIT.
--
-- Generator script revision: b'b65edec6f2fbd53d4aeed6ab08ac6f3b5ae73520'
-- Protocol definition XML version: 2.7.4

local zw = require "st.zwave"
local buf = require "st.zwave.utils.buf"
local utils = require "st.utils"

--- @class st.zwave.CommandClass.AssociationGrpInfo
--- @alias AssociationGrpInfo st.zwave.CommandClass.AssociationGrpInfo
---
--- Supported versions: 1,2,3
---
--- @field public ASSOCIATION_GROUP_NAME_GET number 0x01 - ASSOCIATION_GROUP_NAME_GET command id
--- @field public ASSOCIATION_GROUP_NAME_REPORT number 0x02 - ASSOCIATION_GROUP_NAME_REPORT command id
--- @field public ASSOCIATION_GROUP_INFO_GET number 0x03 - ASSOCIATION_GROUP_INFO_GET command id
--- @field public ASSOCIATION_GROUP_INFO_REPORT number 0x04 - ASSOCIATION_GROUP_INFO_REPORT command id
--- @field public ASSOCIATION_GROUP_COMMAND_LIST_GET number 0x05 - ASSOCIATION_GROUP_COMMAND_LIST_GET command id
--- @field public ASSOCIATION_GROUP_COMMAND_LIST_REPORT number 0x06 - ASSOCIATION_GROUP_COMMAND_LIST_REPORT command id
local AssociationGrpInfo = {}
AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET = 0x01
AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT = 0x02
AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET = 0x03
AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT = 0x04
AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET = 0x05
AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT = 0x06

AssociationGrpInfo._commands = {
  [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET] = "ASSOCIATION_GROUP_NAME_GET",
  [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT] = "ASSOCIATION_GROUP_NAME_REPORT",
  [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET] = "ASSOCIATION_GROUP_INFO_GET",
  [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT] = "ASSOCIATION_GROUP_INFO_REPORT",
  [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET] = "ASSOCIATION_GROUP_COMMAND_LIST_GET",
  [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT] = "ASSOCIATION_GROUP_COMMAND_LIST_REPORT"
}

--- Instantiate a versioned instance of the AssociationGrpInfo Command Class module, optionally setting strict to require explicit passing of all parameters to constructors.
---
--- @param params st.zwave.CommandClass.Params command class instance parameters
--- @return st.zwave.CommandClass.AssociationGrpInfo versioned command class instance
function AssociationGrpInfo:init(params)
  local version = params and params.version or nil
  if (params or {}).strict ~= nil then
  local strict = params.strict
  else
  local strict = true -- default
  end
  local strict = params and params.strict or nil
  assert(version == nil or zw._versions[zw.ASSOCIATION_GRP_INFO][version] ~= nil, "unsupported version")
  assert(strict == nil or type(strict) == "boolean", "strict must be a boolean")
  local mt = {
    __index = self
  }
  local instance = setmetatable({}, mt)
  instance._serialization_version = version
  instance._strict = strict
  return instance
end

setmetatable(AssociationGrpInfo, {
  __call = AssociationGrpInfo.init
})

AssociationGrpInfo._serialization_version = nil
AssociationGrpInfo._strict = false
zw._deserialization_versions = zw.deserialization_versions or {}
zw._versions = zw._versions or {}
setmetatable(zw._deserialization_versions, { __index = zw._versions })
zw._versions[zw.ASSOCIATION_GRP_INFO] = {
  [1] = true,
  [2] = true,
  [3] = true
}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args
--- @alias AssociationGroupNameGetV1Args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args
--- @field public grouping_identifier integer [0,255]
local AssociationGroupNameGetV1Args = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1:st.zwave.Command
--- @alias AssociationGroupNameGetV1 st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1
---
--- v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_GET
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x01
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args command-specific arguments
local AssociationGroupNameGetV1 = {}
setmetatable(AssociationGroupNameGetV1, {
  __index = zw.Command,
  __call = function(cls, self, ...)
    local mt = {
      __index = function(tbl, key)
        if key == "payload" then
          return tbl:serialize()
        else
          return cls[key]
        end
      end,
      __tostring = zw.Command.pretty_print,
      __eq = zw.Command.equals
    }
    local instance = setmetatable({}, mt)
    instance:init(self, ...)
    return instance
  end,
})

--- Initialize a v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_GET object.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args command-specific arguments
function AssociationGroupNameGetV1:init(module, args, ...)
  zw.Command._parse(self, module, zw.ASSOCIATION_GRP_INFO, AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET, 1, args, ...)
end

--- Serialize v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_GET arguments.
---
--- @return string serialized payload
function AssociationGroupNameGetV1:serialize()
  local writer = buf.Writer()
  local args = self.args
  writer:write_u8(args.grouping_identifier)
  return writer.buf
end

--- Deserialize a v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_GET payload.
---
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args deserialized arguments
function AssociationGroupNameGetV1:deserialize()
  local reader = buf.Reader(self.payload)
  reader:read_u8("grouping_identifier")
  return reader.parsed
end

--- Return a deep copy of self.args, merging defaults for unset, but required parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args
function AssociationGroupNameGetV1._defaults(self)
  local args = {}
  args.grouping_identifier = self.args.grouping_identifier or 0
  return args
end

--- Return a deep copy of self.args, merging defaults for all unset parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args
function AssociationGroupNameGetV1._template(self)
  local args = self:_defaults()
  return args
end

--- Set defaults for any required, but unset arguments.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1
function AssociationGroupNameGetV1._set_defaults(self)
  local defaults = self:_defaults()
  utils.merge(self.args, defaults)
end

--- Set const reflectors to allow enum stringification.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1
function AssociationGroupNameGetV1._set_reflectors(self)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args
--- @alias AssociationGroupNameReportV1Args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args
--- @field public grouping_identifier integer [0,255]
--- @field public name string
local AssociationGroupNameReportV1Args = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1:st.zwave.Command
--- @alias AssociationGroupNameReportV1 st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1
---
--- v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_REPORT
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x02
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args command-specific arguments
local AssociationGroupNameReportV1 = {}
setmetatable(AssociationGroupNameReportV1, {
  __index = zw.Command,
  __call = function(cls, self, ...)
    local mt = {
      __index = function(tbl, key)
        if key == "payload" then
          return tbl:serialize()
        else
          return cls[key]
        end
      end,
      __tostring = zw.Command.pretty_print,
      __eq = zw.Command.equals
    }
    local instance = setmetatable({}, mt)
    instance:init(self, ...)
    return instance
  end,
})

--- Initialize a v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_REPORT object.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args command-specific arguments
function AssociationGroupNameReportV1:init(module, args, ...)
  zw.Command._parse(self, module, zw.ASSOCIATION_GRP_INFO, AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT, 1, args, ...)
end

--- Serialize v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_REPORT arguments.
---
--- @return string serialized payload
function AssociationGroupNameReportV1:serialize()
  local writer = buf.Writer()
  local args = self.args
  writer:write_u8(args.grouping_identifier)
  writer:write_u8(writer.length(args.name))
  writer:write_bytes(args.name)
  return writer.buf
end

--- Deserialize a v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_NAME_REPORT payload.
---
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args deserialized arguments
function AssociationGroupNameReportV1:deserialize()
  local reader = buf.Reader(self.payload)
  reader:read_u8("grouping_identifier")
  reader:read_u8("length_of_name")
  reader:read_bytes(reader.parsed.length_of_name, "name")
  return reader.parsed
end

--- Return a deep copy of self.args, merging defaults for unset, but required parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args
function AssociationGroupNameReportV1._defaults(self)
  local args = {}
  args.grouping_identifier = self.args.grouping_identifier or 0
  args.name = self.args.name or ""
  return args
end

--- Return a deep copy of self.args, merging defaults for all unset parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args
function AssociationGroupNameReportV1._template(self)
  local args = self:_defaults()
  return args
end

--- Set defaults for any required, but unset arguments.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1
function AssociationGroupNameReportV1._set_defaults(self)
  local defaults = self:_defaults()
  utils.merge(self.args, defaults)
end

--- Set const reflectors to allow enum stringification.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1
function AssociationGroupNameReportV1._set_reflectors(self)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args
--- @alias AssociationGroupInfoGetV1Args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args
--- @field public list_mode boolean
--- @field public refresh_cache boolean
--- @field public grouping_identifier integer [0,255]
local AssociationGroupInfoGetV1Args = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1:st.zwave.Command
--- @alias AssociationGroupInfoGetV1 st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1
---
--- v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_GET
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x03
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args command-specific arguments
local AssociationGroupInfoGetV1 = {}
setmetatable(AssociationGroupInfoGetV1, {
  __index = zw.Command,
  __call = function(cls, self, ...)
    local mt = {
      __index = function(tbl, key)
        if key == "payload" then
          return tbl:serialize()
        else
          return cls[key]
        end
      end,
      __tostring = zw.Command.pretty_print,
      __eq = zw.Command.equals
    }
    local instance = setmetatable({}, mt)
    instance:init(self, ...)
    return instance
  end,
})

--- Initialize a v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_GET object.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args command-specific arguments
function AssociationGroupInfoGetV1:init(module, args, ...)
  zw.Command._parse(self, module, zw.ASSOCIATION_GRP_INFO, AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET, 1, args, ...)
end

--- Serialize v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_GET arguments.
---
--- @return string serialized payload
function AssociationGroupInfoGetV1:serialize()
  local writer = buf.Writer()
  local args = self.args
  writer:write_bits(6, 0) -- reserved
  writer:write_bool(args.list_mode)
  writer:write_bool(args.refresh_cache)
  writer:write_u8(args.grouping_identifier)
  return writer.buf
end

--- Deserialize a v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_GET payload.
---
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args deserialized arguments
function AssociationGroupInfoGetV1:deserialize()
  local reader = buf.Reader(self.payload)
  reader:read_bits(6) -- reserved
  reader:read_bool("list_mode")
  reader:read_bool("refresh_cache")
  reader:read_u8("grouping_identifier")
  return reader.parsed
end

--- Return a deep copy of self.args, merging defaults for unset, but required parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args
function AssociationGroupInfoGetV1._defaults(self)
  local args = {}
  args.list_mode = self.args.list_mode or false
  args.refresh_cache = self.args.refresh_cache or false
  args.grouping_identifier = self.args.grouping_identifier or 0
  return args
end

--- Return a deep copy of self.args, merging defaults for all unset parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args
function AssociationGroupInfoGetV1._template(self)
  local args = self:_defaults()
  return args
end

--- Set defaults for any required, but unset arguments.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1
function AssociationGroupInfoGetV1._set_defaults(self)
  local defaults = self:_defaults()
  utils.merge(self.args, defaults)
end

--- Set const reflectors to allow enum stringification.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1
function AssociationGroupInfoGetV1._set_reflectors(self)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1ArgsGroups
--- @alias AssociationGroupInfoReportV1ArgsGroups st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1ArgsGroups
--- @field public grouping_identifier integer [0,255]
--- @field public mode integer [0,255]
--- @field public profile1 integer see :lua:class:`AssociationGrpInfo.profile1 <st.zwave.CommandClass.AssociationGrpInfo.profile1>`
--- @field public profile2 integer see :lua:class:`AssociationGrpInfo.profile2 <st.zwave.CommandClass.AssociationGrpInfo.profile2>`
--- @field public event_code integer [0,65535]
local AssociationGroupInfoReportV1ArgsGroups = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args
--- @alias AssociationGroupInfoReportV1Args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args
--- @field public dynamic_info boolean
--- @field public list_mode boolean
--- @field public groups st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1ArgsGroups[]
local AssociationGroupInfoReportV1Args = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1:st.zwave.Command
--- @alias AssociationGroupInfoReportV1 st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1
---
--- v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_REPORT
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x04
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args command-specific arguments
local AssociationGroupInfoReportV1 = {}
setmetatable(AssociationGroupInfoReportV1, {
  __index = zw.Command,
  __call = function(cls, self, ...)
    local mt = {
      __index = function(tbl, key)
        if key == "payload" then
          return tbl:serialize()
        else
          return cls[key]
        end
      end,
      __tostring = zw.Command.pretty_print,
      __eq = zw.Command.equals
    }
    local instance = setmetatable({}, mt)
    instance:init(self, ...)
    return instance
  end,
})

--- Initialize a v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_REPORT object.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args command-specific arguments
function AssociationGroupInfoReportV1:init(module, args, ...)
  zw.Command._parse(self, module, zw.ASSOCIATION_GRP_INFO, AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT, 1, args, ...)
end

--- Serialize v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_REPORT arguments.
---
--- @return string serialized payload
function AssociationGroupInfoReportV1:serialize()
  local writer = buf.Writer()
  local args = self.args
  writer:write_bits(6, writer.length(args.groups))
  writer:write_bool(args.dynamic_info)
  writer:write_bool(args.list_mode)
  for i=1,writer.length(args.groups) do
    writer:write_u8(args.groups[i].grouping_identifier)
    writer:write_u8(args.groups[i].mode)
    writer:write_u8(args.groups[i].profile1)
    writer:write_u8(args.groups[i].profile2)
    writer:write_u8(0) -- reserved
    writer:write_be_u16(args.groups[i].event_code)
  end
  return writer.buf
end

--- Deserialize a v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_INFO_REPORT payload.
---
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args deserialized arguments
function AssociationGroupInfoReportV1:deserialize()
  local reader = buf.Reader(self.payload)
  reader:read_bits(6, "group_count")
  reader:read_bool("dynamic_info")
  reader:read_bool("list_mode")
  reader.parsed.groups = {}
  for i=1,reader.parsed.group_count do
    reader.parsed.groups[i] = {}
    reader:read_u8("grouping_identifier", reader.parsed.groups[i])
    reader:read_u8("mode", reader.parsed.groups[i])
    reader:read_u8("profile1", reader.parsed.groups[i])
    reader:read_u8("profile2", reader.parsed.groups[i])
    reader:read_u8() -- reserved
    reader:read_be_u16("event_code", reader.parsed.groups[i])
  end
  return reader.parsed
end

--- Return a deep copy of self.args, merging defaults for unset, but required parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args
function AssociationGroupInfoReportV1._defaults(self)
  local args = {}
  args.dynamic_info = self.args.dynamic_info or false
  args.list_mode = self.args.list_mode or false
  args.groups = self.args.groups or {}
  for i=1,buf.Writer.length(args.groups) do
    args.groups[i] = args.groups[i] or {}
    args.groups[i].grouping_identifier = self.args.groups[i].grouping_identifier or 0
    args.groups[i].mode = self.args.groups[i].mode or 0
    args.groups[i].profile1 = self.args.groups[i].profile1 or 0
    args.groups[i].profile2 = self.args.groups[i].profile2 or 0
    args.groups[i].event_code = self.args.groups[i].event_code or 0
  end
  return args
end

--- Return a deep copy of self.args, merging defaults for all unset parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args
function AssociationGroupInfoReportV1._template(self)
  local args = self:_defaults()
  local writer = buf.Writer()
  for i=1,buf.Writer.length(args.groups) do
    args.groups[i] = args.groups[i] or {}
  end
  return args
end

--- Set defaults for any required, but unset arguments.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1
function AssociationGroupInfoReportV1._set_defaults(self)
  local defaults = self:_defaults()
  utils.merge(self.args, defaults)
end

--- Set const reflectors to allow enum stringification.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1
function AssociationGroupInfoReportV1._set_reflectors(self)
  local args = self.args
  for i=1,buf.Writer.length(args.groups) do
    args.groups[i]._reflect = args.groups[i]._reflect or {}
    args.groups[i]._reflect.profile1 = function()
      return zw._reflect(
        AssociationGrpInfo._reflect_profile1,
        args.groups[i].profile1
      )
    end
    args.groups[i]._reflect = args.groups[i]._reflect or {}
    args.groups[i]._reflect.profile2 = function()
      return zw._reflect(
        AssociationGrpInfo._reflect_profile2,
        args.groups[i].profile1,
        args.groups[i].profile2
      )
    end
  end
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args
--- @alias AssociationGroupCommandListGetV1Args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args
--- @field public allow_cache boolean
--- @field public grouping_identifier integer [0,255]
local AssociationGroupCommandListGetV1Args = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1:st.zwave.Command
--- @alias AssociationGroupCommandListGetV1 st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1
---
--- v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_GET
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x05
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args command-specific arguments
local AssociationGroupCommandListGetV1 = {}
setmetatable(AssociationGroupCommandListGetV1, {
  __index = zw.Command,
  __call = function(cls, self, ...)
    local mt = {
      __index = function(tbl, key)
        if key == "payload" then
          return tbl:serialize()
        else
          return cls[key]
        end
      end,
      __tostring = zw.Command.pretty_print,
      __eq = zw.Command.equals
    }
    local instance = setmetatable({}, mt)
    instance:init(self, ...)
    return instance
  end,
})

--- Initialize a v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_GET object.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args command-specific arguments
function AssociationGroupCommandListGetV1:init(module, args, ...)
  zw.Command._parse(self, module, zw.ASSOCIATION_GRP_INFO, AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET, 1, args, ...)
end

--- Serialize v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_GET arguments.
---
--- @return string serialized payload
function AssociationGroupCommandListGetV1:serialize()
  local writer = buf.Writer()
  local args = self.args
  writer:write_bits(7, 0) -- reserved
  writer:write_bool(args.allow_cache)
  writer:write_u8(args.grouping_identifier)
  return writer.buf
end

--- Deserialize a v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_GET payload.
---
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args deserialized arguments
function AssociationGroupCommandListGetV1:deserialize()
  local reader = buf.Reader(self.payload)
  reader:read_bits(7) -- reserved
  reader:read_bool("allow_cache")
  reader:read_u8("grouping_identifier")
  return reader.parsed
end

--- Return a deep copy of self.args, merging defaults for unset, but required parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args
function AssociationGroupCommandListGetV1._defaults(self)
  local args = {}
  args.allow_cache = self.args.allow_cache or false
  args.grouping_identifier = self.args.grouping_identifier or 0
  return args
end

--- Return a deep copy of self.args, merging defaults for all unset parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args
function AssociationGroupCommandListGetV1._template(self)
  local args = self:_defaults()
  return args
end

--- Set defaults for any required, but unset arguments.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1
function AssociationGroupCommandListGetV1._set_defaults(self)
  local defaults = self:_defaults()
  utils.merge(self.args, defaults)
end

--- Set const reflectors to allow enum stringification.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1
function AssociationGroupCommandListGetV1._set_reflectors(self)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args
--- @alias AssociationGroupCommandListReportV1Args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args
--- @field public grouping_identifier integer [0,255]
--- @field public command string
local AssociationGroupCommandListReportV1Args = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1:st.zwave.Command
--- @alias AssociationGroupCommandListReportV1 st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1
---
--- v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_REPORT
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x06
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args command-specific arguments
local AssociationGroupCommandListReportV1 = {}
setmetatable(AssociationGroupCommandListReportV1, {
  __index = zw.Command,
  __call = function(cls, self, ...)
    local mt = {
      __index = function(tbl, key)
        if key == "payload" then
          return tbl:serialize()
        else
          return cls[key]
        end
      end,
      __tostring = zw.Command.pretty_print,
      __eq = zw.Command.equals
    }
    local instance = setmetatable({}, mt)
    instance:init(self, ...)
    return instance
  end,
})

--- Initialize a v1 and forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_REPORT object.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args command-specific arguments
function AssociationGroupCommandListReportV1:init(module, args, ...)
  zw.Command._parse(self, module, zw.ASSOCIATION_GRP_INFO, AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT, 1, args, ...)
end

--- Serialize v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_REPORT arguments.
---
--- @return string serialized payload
function AssociationGroupCommandListReportV1:serialize()
  local writer = buf.Writer()
  local args = self.args
  writer:write_u8(args.grouping_identifier)
  writer:write_u8(writer.length(args.command))
  writer:write_bytes(args.command)
  return writer.buf
end

--- Deserialize a v1 or forward-compatible v2,v3 ASSOCIATION_GROUP_COMMAND_LIST_REPORT payload.
---
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args deserialized arguments
function AssociationGroupCommandListReportV1:deserialize()
  local reader = buf.Reader(self.payload)
  reader:read_u8("grouping_identifier")
  reader:read_u8("list_length")
  reader:read_bytes(reader.parsed.list_length, "command")
  return reader.parsed
end

--- Return a deep copy of self.args, merging defaults for unset, but required parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args
function AssociationGroupCommandListReportV1._defaults(self)
  local args = {}
  args.grouping_identifier = self.args.grouping_identifier or 0
  args.command = self.args.command or ""
  return args
end

--- Return a deep copy of self.args, merging defaults for all unset parameters.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args
function AssociationGroupCommandListReportV1._template(self)
  local args = self:_defaults()
  return args
end

--- Set defaults for any required, but unset arguments.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1
function AssociationGroupCommandListReportV1._set_defaults(self)
  local defaults = self:_defaults()
  utils.merge(self.args, defaults)
end

--- Set const reflectors to allow enum stringification.
---
--- @param self st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1
function AssociationGroupCommandListReportV1._set_reflectors(self)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGet
--- @alias _AssociationGroupNameGet st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGet
---
--- Dynamically versioned ASSOCIATION_GROUP_NAME_GET
---
--- Supported versions: 1,2,3; unique base versions: 1
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x01
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args
local _AssociationGroupNameGet = {}
setmetatable(_AssociationGroupNameGet, {
  __call = function(cls, self, ...)
    return cls:construct(self, ...)
  end,
})

--- Construct an ASSOCIATION_GROUP_NAME_GET object at the module instance serialization version.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGetV1Args command-specific arguments
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameGet
function _AssociationGroupNameGet:construct(module, args, ...)
  return zw.Command._construct(module, AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET, module._serialization_version, args, ...)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReport
--- @alias _AssociationGroupNameReport st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReport
---
--- Dynamically versioned ASSOCIATION_GROUP_NAME_REPORT
---
--- Supported versions: 1,2,3; unique base versions: 1
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x02
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args
local _AssociationGroupNameReport = {}
setmetatable(_AssociationGroupNameReport, {
  __call = function(cls, self, ...)
    return cls:construct(self, ...)
  end,
})

--- Construct an ASSOCIATION_GROUP_NAME_REPORT object at the module instance serialization version.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReportV1Args command-specific arguments
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupNameReport
function _AssociationGroupNameReport:construct(module, args, ...)
  return zw.Command._construct(module, AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT, module._serialization_version, args, ...)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGet
--- @alias _AssociationGroupInfoGet st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGet
---
--- Dynamically versioned ASSOCIATION_GROUP_INFO_GET
---
--- Supported versions: 1,2,3; unique base versions: 1
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x03
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args
local _AssociationGroupInfoGet = {}
setmetatable(_AssociationGroupInfoGet, {
  __call = function(cls, self, ...)
    return cls:construct(self, ...)
  end,
})

--- Construct an ASSOCIATION_GROUP_INFO_GET object at the module instance serialization version.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGetV1Args command-specific arguments
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoGet
function _AssociationGroupInfoGet:construct(module, args, ...)
  return zw.Command._construct(module, AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET, module._serialization_version, args, ...)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReport
--- @alias _AssociationGroupInfoReport st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReport
---
--- Dynamically versioned ASSOCIATION_GROUP_INFO_REPORT
---
--- Supported versions: 1,2,3; unique base versions: 1
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x04
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args
local _AssociationGroupInfoReport = {}
setmetatable(_AssociationGroupInfoReport, {
  __call = function(cls, self, ...)
    return cls:construct(self, ...)
  end,
})

--- Construct an ASSOCIATION_GROUP_INFO_REPORT object at the module instance serialization version.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReportV1Args command-specific arguments
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupInfoReport
function _AssociationGroupInfoReport:construct(module, args, ...)
  return zw.Command._construct(module, AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT, module._serialization_version, args, ...)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGet
--- @alias _AssociationGroupCommandListGet st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGet
---
--- Dynamically versioned ASSOCIATION_GROUP_COMMAND_LIST_GET
---
--- Supported versions: 1,2,3; unique base versions: 1
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x05
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args
local _AssociationGroupCommandListGet = {}
setmetatable(_AssociationGroupCommandListGet, {
  __call = function(cls, self, ...)
    return cls:construct(self, ...)
  end,
})

--- Construct an ASSOCIATION_GROUP_COMMAND_LIST_GET object at the module instance serialization version.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGetV1Args command-specific arguments
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListGet
function _AssociationGroupCommandListGet:construct(module, args, ...)
  return zw.Command._construct(module, AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET, module._serialization_version, args, ...)
end

--- @class st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReport
--- @alias _AssociationGroupCommandListReport st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReport
---
--- Dynamically versioned ASSOCIATION_GROUP_COMMAND_LIST_REPORT
---
--- Supported versions: 1,2,3; unique base versions: 1
---
--- @field public cmd_class number 0x59
--- @field public cmd_id number 0x06
--- @field public version number 1
--- @field public args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args
local _AssociationGroupCommandListReport = {}
setmetatable(_AssociationGroupCommandListReport, {
  __call = function(cls, self, ...)
    return cls:construct(self, ...)
  end,
})

--- Construct an ASSOCIATION_GROUP_COMMAND_LIST_REPORT object at the module instance serialization version.
---
--- @param module st.zwave.CommandClass.AssociationGrpInfo command class module instance
--- @param args st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReportV1Args command-specific arguments
--- @return st.zwave.CommandClass.AssociationGrpInfo.AssociationGroupCommandListReport
function _AssociationGroupCommandListReport:construct(module, args, ...)
  return zw.Command._construct(module, AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT, module._serialization_version, args, ...)
end

AssociationGrpInfo.AssociationGroupNameGetV1 = AssociationGroupNameGetV1
AssociationGrpInfo.AssociationGroupNameReportV1 = AssociationGroupNameReportV1
AssociationGrpInfo.AssociationGroupInfoGetV1 = AssociationGroupInfoGetV1
AssociationGrpInfo.AssociationGroupInfoReportV1 = AssociationGroupInfoReportV1
AssociationGrpInfo.AssociationGroupCommandListGetV1 = AssociationGroupCommandListGetV1
AssociationGrpInfo.AssociationGroupCommandListReportV1 = AssociationGroupCommandListReportV1
AssociationGrpInfo.AssociationGroupNameGet = _AssociationGroupNameGet
AssociationGrpInfo.AssociationGroupNameReport = _AssociationGroupNameReport
AssociationGrpInfo.AssociationGroupInfoGet = _AssociationGroupInfoGet
AssociationGrpInfo.AssociationGroupInfoReport = _AssociationGroupInfoReport
AssociationGrpInfo.AssociationGroupCommandListGet = _AssociationGroupCommandListGet
AssociationGrpInfo.AssociationGroupCommandListReport = _AssociationGroupCommandListReport

AssociationGrpInfo._lut = {
  [0] = { -- dynamically versioned constructors
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET] = AssociationGrpInfo.AssociationGroupNameGet,
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT] = AssociationGrpInfo.AssociationGroupNameReport,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET] = AssociationGrpInfo.AssociationGroupInfoGet,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT] = AssociationGrpInfo.AssociationGroupInfoReport,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET] = AssociationGrpInfo.AssociationGroupCommandListGet,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT] = AssociationGrpInfo.AssociationGroupCommandListReport
  },
  [1] = { -- version 1
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET] = AssociationGrpInfo.AssociationGroupNameGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT] = AssociationGrpInfo.AssociationGroupNameReportV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET] = AssociationGrpInfo.AssociationGroupInfoGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT] = AssociationGrpInfo.AssociationGroupInfoReportV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET] = AssociationGrpInfo.AssociationGroupCommandListGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT] = AssociationGrpInfo.AssociationGroupCommandListReportV1
  },
  [2] = { -- version 2
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET] = AssociationGrpInfo.AssociationGroupNameGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT] = AssociationGrpInfo.AssociationGroupNameReportV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET] = AssociationGrpInfo.AssociationGroupInfoGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT] = AssociationGrpInfo.AssociationGroupInfoReportV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET] = AssociationGrpInfo.AssociationGroupCommandListGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT] = AssociationGrpInfo.AssociationGroupCommandListReportV1
  },
  [3] = { -- version 3
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_GET] = AssociationGrpInfo.AssociationGroupNameGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_NAME_REPORT] = AssociationGrpInfo.AssociationGroupNameReportV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_GET] = AssociationGrpInfo.AssociationGroupInfoGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_INFO_REPORT] = AssociationGrpInfo.AssociationGroupInfoReportV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_GET] = AssociationGrpInfo.AssociationGroupCommandListGetV1,
    [AssociationGrpInfo.ASSOCIATION_GROUP_COMMAND_LIST_REPORT] = AssociationGrpInfo.AssociationGroupCommandListReportV1
  }
}
--- @class st.zwave.CommandClass.AssociationGrpInfo.profile1
--- @alias profile1 st.zwave.CommandClass.AssociationGrpInfo.profile1
--- @field public PROFILE_GENERAL number 0x00
--- @field public PROFILE_CONTROL number 0x20
--- @field public PROFILE_SENSOR number 0x31
--- @field public PROFILE_METER number 0x32
--- @field public PROFILE_IRRIGATION number 0x6B
--- @field public PROFILE_NOTIFICATION number 0x71
local profile1 = {
  PROFILE_GENERAL = 0x00,
  PROFILE_CONTROL = 0x20,
  PROFILE_SENSOR = 0x31,
  PROFILE_METER = 0x32,
  PROFILE_IRRIGATION = 0x6B,
  PROFILE_NOTIFICATION = 0x71
}
AssociationGrpInfo.profile1 = profile1
AssociationGrpInfo._reflect_profile1 = zw._reflection_builder(AssociationGrpInfo.profile1)

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_control
--- @alias profile2_profile_control st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_control
--- @field public KEY01 number 0x01
--- @field public KEY02 number 0x02
--- @field public KEY03 number 0x03
--- @field public KEY04 number 0x04
--- @field public KEY05 number 0x05
--- @field public KEY06 number 0x06
--- @field public KEY07 number 0x07
--- @field public KEY08 number 0x08
--- @field public KEY09 number 0x09
--- @field public KEY10 number 0x0A
--- @field public KEY11 number 0x0B
--- @field public KEY12 number 0x0C
--- @field public KEY13 number 0x0D
--- @field public KEY14 number 0x0E
--- @field public KEY15 number 0x0F
--- @field public KEY16 number 0x10
--- @field public KEY17 number 0x11
--- @field public KEY18 number 0x12
--- @field public KEY19 number 0x13
--- @field public KEY20 number 0x14
--- @field public KEY21 number 0x15
--- @field public KEY22 number 0x16
--- @field public KEY23 number 0x17
--- @field public KEY24 number 0x18
--- @field public KEY25 number 0x19
--- @field public KEY26 number 0x1A
--- @field public KEY27 number 0x1B
--- @field public KEY28 number 0x1C
--- @field public KEY29 number 0x1D
--- @field public KEY30 number 0x1E
--- @field public KEY31 number 0x1F
--- @field public KEY32 number 0x20
local profile2_profile_control = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_general
--- @alias profile2_profile_general st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_general
--- @field public NA number 0x00
--- @field public LIFELINE number 0x01
local profile2_profile_general = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_irrigation
--- @alias profile2_profile_irrigation st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_irrigation
--- @field public IRRIGATION_CHANNEL_01 number 0x01
--- @field public IRRIGATION_CHANNEL_02 number 0x02
--- @field public IRRIGATION_CHANNEL_03 number 0x03
--- @field public IRRIGATION_CHANNEL_04 number 0x04
--- @field public IRRIGATION_CHANNEL_05 number 0x05
--- @field public IRRIGATION_CHANNEL_06 number 0x06
--- @field public IRRIGATION_CHANNEL_07 number 0x07
--- @field public IRRIGATION_CHANNEL_08 number 0x08
--- @field public IRRIGATION_CHANNEL_09 number 0x09
--- @field public IRRIGATION_CHANNEL_10 number 0x0A
--- @field public IRRIGATION_CHANNEL_11 number 0x0B
--- @field public IRRIGATION_CHANNEL_12 number 0x0C
--- @field public IRRIGATION_CHANNEL_13 number 0x0D
--- @field public IRRIGATION_CHANNEL_14 number 0x0E
--- @field public IRRIGATION_CHANNEL_15 number 0x0F
--- @field public IRRIGATION_CHANNEL_16 number 0x10
--- @field public IRRIGATION_CHANNEL_17 number 0x11
--- @field public IRRIGATION_CHANNEL_18 number 0x12
--- @field public IRRIGATION_CHANNEL_19 number 0x13
--- @field public IRRIGATION_CHANNEL_20 number 0x14
--- @field public IRRIGATION_CHANNEL_21 number 0x15
--- @field public IRRIGATION_CHANNEL_22 number 0x16
--- @field public IRRIGATION_CHANNEL_23 number 0x17
--- @field public IRRIGATION_CHANNEL_24 number 0x18
--- @field public IRRIGATION_CHANNEL_25 number 0x19
--- @field public IRRIGATION_CHANNEL_26 number 0x1A
--- @field public IRRIGATION_CHANNEL_27 number 0x1B
--- @field public IRRIGATION_CHANNEL_28 number 0x1C
--- @field public IRRIGATION_CHANNEL_29 number 0x1D
--- @field public IRRIGATION_CHANNEL_30 number 0x1E
--- @field public IRRIGATION_CHANNEL_31 number 0x1F
--- @field public IRRIGATION_CHANNEL_32 number 0x20
local profile2_profile_irrigation = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_meter
--- @alias profile2_profile_meter st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_meter
--- @field public TYPE_ELECTRIC number 0x01
--- @field public TYPE_GAS number 0x02
--- @field public TYPE_WATER number 0x03
local profile2_profile_meter = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_notification
--- @alias profile2_profile_notification st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_notification
--- @field public TYPE_SMOKE number 0x01
--- @field public TYPE_CO2 number 0x03
local profile2_profile_notification = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_sensor
--- @alias profile2_profile_sensor st.zwave.CommandClass.AssociationGrpInfo.profile2_profile_sensor
--- @field public PROFILE_MULTILEVEL_SENSOR_TYPE_TEMPERATURE number 0x01
--- @field public PROFILE_MULTILEVEL_SENSOR_TYPE_HUMIDITY number 0x05
local profile2_profile_sensor = {}

--- @class st.zwave.CommandClass.AssociationGrpInfo.profile2
--- @alias profile2 st.zwave.CommandClass.AssociationGrpInfo.profile2
--- @field public profile_control st.zwave.CommandClass.profile2_profile_control
--- @field public profile_general st.zwave.CommandClass.profile2_profile_general
--- @field public profile_irrigation st.zwave.CommandClass.profile2_profile_irrigation
--- @field public profile_meter st.zwave.CommandClass.profile2_profile_meter
--- @field public profile_notification st.zwave.CommandClass.profile2_profile_notification
--- @field public profile_sensor st.zwave.CommandClass.profile2_profile_sensor
local profile2 = {
  profile_control = {
    KEY01 = 0x01,
    KEY02 = 0x02,
    KEY03 = 0x03,
    KEY04 = 0x04,
    KEY05 = 0x05,
    KEY06 = 0x06,
    KEY07 = 0x07,
    KEY08 = 0x08,
    KEY09 = 0x09,
    KEY10 = 0x0A,
    KEY11 = 0x0B,
    KEY12 = 0x0C,
    KEY13 = 0x0D,
    KEY14 = 0x0E,
    KEY15 = 0x0F,
    KEY16 = 0x10,
    KEY17 = 0x11,
    KEY18 = 0x12,
    KEY19 = 0x13,
    KEY20 = 0x14,
    KEY21 = 0x15,
    KEY22 = 0x16,
    KEY23 = 0x17,
    KEY24 = 0x18,
    KEY25 = 0x19,
    KEY26 = 0x1A,
    KEY27 = 0x1B,
    KEY28 = 0x1C,
    KEY29 = 0x1D,
    KEY30 = 0x1E,
    KEY31 = 0x1F,
    KEY32 = 0x20
  },
  profile_general = {
    NA = 0x00,
    LIFELINE = 0x01
  },
  profile_irrigation = {
    IRRIGATION_CHANNEL_01 = 0x01,
    IRRIGATION_CHANNEL_02 = 0x02,
    IRRIGATION_CHANNEL_03 = 0x03,
    IRRIGATION_CHANNEL_04 = 0x04,
    IRRIGATION_CHANNEL_05 = 0x05,
    IRRIGATION_CHANNEL_06 = 0x06,
    IRRIGATION_CHANNEL_07 = 0x07,
    IRRIGATION_CHANNEL_08 = 0x08,
    IRRIGATION_CHANNEL_09 = 0x09,
    IRRIGATION_CHANNEL_10 = 0x0A,
    IRRIGATION_CHANNEL_11 = 0x0B,
    IRRIGATION_CHANNEL_12 = 0x0C,
    IRRIGATION_CHANNEL_13 = 0x0D,
    IRRIGATION_CHANNEL_14 = 0x0E,
    IRRIGATION_CHANNEL_15 = 0x0F,
    IRRIGATION_CHANNEL_16 = 0x10,
    IRRIGATION_CHANNEL_17 = 0x11,
    IRRIGATION_CHANNEL_18 = 0x12,
    IRRIGATION_CHANNEL_19 = 0x13,
    IRRIGATION_CHANNEL_20 = 0x14,
    IRRIGATION_CHANNEL_21 = 0x15,
    IRRIGATION_CHANNEL_22 = 0x16,
    IRRIGATION_CHANNEL_23 = 0x17,
    IRRIGATION_CHANNEL_24 = 0x18,
    IRRIGATION_CHANNEL_25 = 0x19,
    IRRIGATION_CHANNEL_26 = 0x1A,
    IRRIGATION_CHANNEL_27 = 0x1B,
    IRRIGATION_CHANNEL_28 = 0x1C,
    IRRIGATION_CHANNEL_29 = 0x1D,
    IRRIGATION_CHANNEL_30 = 0x1E,
    IRRIGATION_CHANNEL_31 = 0x1F,
    IRRIGATION_CHANNEL_32 = 0x20
  },
  profile_meter = {
    TYPE_ELECTRIC = 0x01,
    TYPE_GAS = 0x02,
    TYPE_WATER = 0x03
  },
  profile_notification = {
    TYPE_SMOKE = 0x01,
    TYPE_CO2 = 0x03
  },
  profile_sensor = {
    PROFILE_MULTILEVEL_SENSOR_TYPE_TEMPERATURE = 0x01,
    PROFILE_MULTILEVEL_SENSOR_TYPE_HUMIDITY = 0x05
  }
}
AssociationGrpInfo.profile2 = profile2
AssociationGrpInfo._reflect_profile2 = zw._reflection_builder(AssociationGrpInfo.profile2, AssociationGrpInfo.profile1)


return AssociationGrpInfo
